<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SMULET&#39;s BLOG</title>
  
  
  <link href="http://simuleite.github.io/atom.xml" rel="self"/>
  
  <link href="http://simuleite.github.io/"/>
  <updated>2024-12-21T02:45:45.311Z</updated>
  <id>http://simuleite.github.io/</id>
  
  <author>
    <name>SIMULEITE</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SSM 项目 图书馆</title>
    <link href="http://simuleite.github.io/ComputerScience/%E9%A1%B9%E7%9B%AE/SSM%20%E9%A1%B9%E7%9B%AE%20%E5%9B%BE%E4%B9%A6%E9%A6%86/"/>
    <id>http://simuleite.github.io/ComputerScience/%E9%A1%B9%E7%9B%AE/SSM%20%E9%A1%B9%E7%9B%AE%20%E5%9B%BE%E4%B9%A6%E9%A6%86/</id>
    <published>2024-12-20T16:00:00.000Z</published>
    <updated>2024-12-21T02:45:45.311Z</updated>
    
    <content type="html"><![CDATA[<h1 id="导入依赖"><a class="markdownIt-Anchor" href="#导入依赖"></a> 导入依赖</h1><ol><li>Sl4j</li><li>SpringMVC</li><li>SpringSecurity</li><li>JDBC、MyBatis</li></ol><span id="more"></span><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-web --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-config --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-context --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-jdk14 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-jdk14<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.mysql/mysql-connector-j --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>9.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.36<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf-spring6 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.thymeleaf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-spring6<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/jakarta.annotation/jakarta.annotation-api --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jakarta.annotation<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jakarta.annotation-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="最小ssmsecurity自定义登录页"><a class="markdownIt-Anchor" href="#最小ssmsecurity自定义登录页"></a> 最小SSM：Security自定义登录页</h1><ol><li>Initializer</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MvcInitializer</span> <span class="keyword">extends</span> <span class="title class_">AbstractAnnotationConfigDispatcherServletInitializer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;?&gt;[] getRootConfigClasses() &#123;</span><br><span class="line">        <span class="comment">// 加入所有的Configuration</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Class</span>[] &#123;MvcConfiguration.class, SecurityConfiguration.class, MainConfiguration.class&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;?&gt;[] getServletConfigClasses() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> String[] getServletMappings() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>[] &#123;<span class="string">&quot;/&quot;</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SecurityInitializer</span> <span class="keyword">extends</span> <span class="title class_">AbstractSecurityWebApplicationInitializer</span> &#123;&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>Configuration</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(&quot;com.study.service&quot;)</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.study.mapper&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> DataSource <span class="title function_">dataSource</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 连接数据库</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PooledDataSource</span>(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>, <span class="string">&quot;jdbc:mysql://localhost:3306/book_manage&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;Abc123&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> SqlSessionFactoryBean <span class="title function_">sqlSessionFactoryBean</span><span class="params">(DataSource dataSource)</span> &#123;</span><br><span class="line">        <span class="type">SqlSessionFactoryBean</span> <span class="variable">bean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBean</span>();</span><br><span class="line">        <span class="comment">// 设置数据库</span></span><br><span class="line">        bean.setDataSource(dataSource);</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableWebMvc</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(&quot;com.study.controller&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MvcConfiguration</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ThymeleafViewResolver <span class="title function_">thymeleafViewResolver</span><span class="params">(SpringTemplateEngine springTemplateEngine)</span> &#123;</span><br><span class="line">        <span class="comment">// 设置模板引擎与编码</span></span><br><span class="line">        <span class="type">ThymeleafViewResolver</span> <span class="variable">resolver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThymeleafViewResolver</span>();</span><br><span class="line">        resolver.setOrder(<span class="number">1</span>);</span><br><span class="line">        resolver.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        resolver.setTemplateEngine(springTemplateEngine);</span><br><span class="line">        <span class="keyword">return</span> resolver;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> SpringResourceTemplateResolver <span class="title function_">springResourceTemplateResolver</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">SpringResourceTemplateResolver</span> <span class="variable">resolver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpringResourceTemplateResolver</span>();</span><br><span class="line">        resolver.setSuffix(<span class="string">&quot;.html&quot;</span>);</span><br><span class="line">        resolver.setPrefix(<span class="string">&quot;classpath:/templates/&quot;</span>);</span><br><span class="line">        resolver.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> resolver;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> SpringTemplateEngine <span class="title function_">springTemplateEngine</span><span class="params">(ITemplateResolver resolver)</span> &#123;</span><br><span class="line">        <span class="type">SpringTemplateEngine</span> <span class="variable">engine</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpringTemplateEngine</span>();</span><br><span class="line">        engine.setTemplateResolver(resolver);</span><br><span class="line">        <span class="keyword">return</span> engine;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">configureDefaultServletHandling</span><span class="params">(DefaultServletHandlerConfigurer configurer)</span> &#123;</span><br><span class="line">        configurer.enable();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span> &#123;</span><br><span class="line">        registry.addResourceHandler(<span class="string">&quot;/static/**&quot;</span>).addResourceLocations(<span class="string">&quot;classpath:/static/&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SecurityConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    BCryptPasswordEncoder <span class="title function_">bCryptPasswordEncoder</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 使用B加密</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">BCryptPasswordEncoder</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> PersistentTokenRepository <span class="title function_">tokenRepository</span><span class="params">(DataSource dataSource)</span> &#123;</span><br><span class="line">        <span class="comment">// 设置token数据库</span></span><br><span class="line">        <span class="type">JdbcTokenRepositoryImpl</span> <span class="variable">repository</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JdbcTokenRepositoryImpl</span>();</span><br><span class="line">        repository.setDataSource(dataSource);</span><br><span class="line">        repository.setCreateTableOnStartup(<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">return</span> repository;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> SecurityFilterChain <span class="title function_">filterChain</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> http</span><br><span class="line">                .authorizeHttpRequests(auth -&gt; &#123;</span><br><span class="line">                    <span class="comment">// 允许静态资源通过</span></span><br><span class="line">                    auth.requestMatchers(<span class="string">&quot;/static/**&quot;</span>).permitAll();</span><br><span class="line">                    <span class="comment">// 一律需要登录</span></span><br><span class="line">                    auth.anyRequest().authenticated();</span><br><span class="line">                &#125;)</span><br><span class="line">                .formLogin(conf -&gt; &#123;</span><br><span class="line">                    <span class="comment">// 自定义登录页</span></span><br><span class="line">                    conf.loginPage(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line">                    <span class="comment">// 对应前端form的action名称</span></span><br><span class="line">                    conf.loginProcessingUrl(<span class="string">&quot;/doLogin&quot;</span>);</span><br><span class="line">                    conf.defaultSuccessUrl(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">                    conf.permitAll();</span><br><span class="line">                &#125;)</span><br><span class="line">                .logout(conf -&gt; &#123;</span><br><span class="line">                    conf.logoutUrl(<span class="string">&quot;/doLogout&quot;</span>);</span><br><span class="line">                    conf.logoutSuccessUrl(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line">                    conf.permitAll();</span><br><span class="line">                &#125;)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>Service</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    UserMapper mapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> UserDetails <span class="title function_">loadUserByUsername</span><span class="params">(String username)</span> <span class="keyword">throws</span> UsernameNotFoundException &#123;</span><br><span class="line">        <span class="comment">// 实现登录功能</span></span><br><span class="line">        <span class="type">Account</span> <span class="variable">account</span> <span class="operator">=</span> mapper.findUserByName(username);</span><br><span class="line">        <span class="keyword">if</span> (account == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UsernameNotFoundException</span>(<span class="string">&quot;用户名或密码错误！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> User</span><br><span class="line">                .withUsername(account.getUsername())</span><br><span class="line">                .password(account.getPassword())</span><br><span class="line">                .roles(account.getRole())</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>Controller</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BorrowController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    BookService bookService;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 指定多个路</span></span><br><span class="line">    <span class="meta">@GetMapping(&#123;&quot;/borrow&quot;, &quot;/&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">borrow</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">        <span class="comment">// 获取User</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) SecurityContextHolder.getContext().getAuthentication().getPrincipal();</span><br><span class="line">        <span class="comment">// 前后端交互</span></span><br><span class="line">        model.addAttribute(<span class="string">&quot;nickname&quot;</span>, user.getUsername());</span><br><span class="line">        model.addAttribute(<span class="string">&quot;borrow_list&quot;</span>, bookService.getBorrowList());</span><br><span class="line">        model.addAttribute(<span class="string">&quot;book_count&quot;</span>, bookService.getBookCount());</span><br><span class="line">        model.addAttribute(<span class="string">&quot;student_count&quot;</span>, userService.getStudentCount());</span><br><span class="line">        <span class="comment">// 返回html</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;borrow&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="security获取用户信息"><a class="markdownIt-Anchor" href="#security获取用户信息"></a> Security获取用户信息</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) SecurityContextHolder.getContext().getAuthentication().getPrincipal();</span><br></pre></td></tr></table></figure><h1 id="日期格式"><a class="markdownIt-Anchor" href="#日期格式"></a> 日期格式</h1><ul><li>MySQL中，<code>DATE</code>包含年月日，<code>DATETIME</code>包含年月日+时间</li><li>Java中，<code>DATE</code>包含年月日+时间；也可以用<code>String</code>表示时间，包括年月日</li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;导入依赖&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#导入依赖&quot;&gt;&lt;/a&gt; 导入依赖&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Sl4j&lt;/li&gt;
&lt;li&gt;SpringMVC&lt;/li&gt;
&lt;li&gt;SpringSecurity&lt;/li&gt;
&lt;li&gt;JDBC、MyBatis&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    
    <category term="项目" scheme="http://simuleite.github.io/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot笔记</title>
    <link href="http://simuleite.github.io/ComputerScience/%E7%AC%94%E8%AE%B0/SpringBoot%E7%AC%94%E8%AE%B0/"/>
    <id>http://simuleite.github.io/ComputerScience/%E7%AC%94%E8%AE%B0/SpringBoot%E7%AC%94%E8%AE%B0/</id>
    <published>2024-12-20T16:00:00.000Z</published>
    <updated>2024-12-21T03:27:03.474Z</updated>
    
    <content type="html"><![CDATA[<h1 id="applicationproperties"><a class="markdownIt-Anchor" href="#applicationproperties"></a> application.properties</h1><h2 id="property形式"><a class="markdownIt-Anchor" href="#property形式"></a> Property形式</h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">server.port</span>=<span class="string">80 // 端口号</span></span><br><span class="line"><span class="attr">aruge.arugement</span>=<span class="string">value</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Value(&quot;&#123;argue.argument&#125;&quot;)</span></span><br><span class="line">String argu;</span><br></pre></td></tr></table></figure><h2 id="yaml形式"><a class="markdownIt-Anchor" href="#yaml形式"></a> YAML形式</h2><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">    <span class="attr">datasource:</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/db_name</span></span><br><span class="line">        <span class="attr">username:</span></span><br><span class="line">        <span class="attr">password:</span></span><br><span class="line">        <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.Driver</span></span><br><span class="line">    <span class="attr">mvc:</span></span><br><span class="line">        <span class="attr">static-path-pattern:</span> <span class="string">/static/**</span></span><br><span class="line">    <span class="attr">security:</span></span><br><span class="line">        <span class="attr">filter:</span></span><br><span class="line">            <span class="attr">order:</span> <span class="number">-100</span> <span class="comment"># Spring Security Filter 优先级</span></span><br><span class="line">        <span class="attr">user:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">&#x27;admin&#x27;</span></span><br><span class="line">            <span class="attr">password:</span> <span class="string">&#x27;Abc123.&#x27;</span></span><br><span class="line">            <span class="attr">roles:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">admin</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">user</span></span><br></pre></td></tr></table></figure><h1 id="package"><a class="markdownIt-Anchor" href="#package"></a> Package</h1><h2 id="jar"><a class="markdownIt-Anchor" href="#jar"></a> JAR</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mvn package</span><br><span class="line">java -jar yourProj.jar</span><br></pre></td></tr></table></figure><h1 id="war"><a class="markdownIt-Anchor" href="#war"></a> WAR</h1><ol><li>排除SpringBoot内嵌Tomcat</li></ol><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 使用exclusion排除 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>添加Servlet依赖</li></ol><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jakarta.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jakarta.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>将打包方式修改为WAR</li></ol><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>修改主类Application</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DemoApplication</span> <span class="keyword">extends</span> <span class="title class_">SpringBootServletInitializer</span> &#123;  <span class="comment">//继承专用的初始化器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(DemoApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//重写configure方法，完成启动类配置</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> SpringApplicationBuilder <span class="title function_">configure</span><span class="params">(SpringApplicationBuilder builder)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> builder.sources(DemoApplication.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>打包</li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mvn package</span><br></pre></td></tr></table></figure><h2 id="graalvm-native-exe"><a class="markdownIt-Anchor" href="#graalvm-native-exe"></a> GraalVM Native EXE</h2><blockquote><p>[!WARNING]<br />Mybatis目前不支持Native-Image</p></blockquote><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mvn -Pnative -DskipTests native:compile</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;applicationproperties&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#applicationproperties&quot;&gt;&lt;/a&gt; application.properties&lt;/h1&gt;
&lt;h2 id=&quot;property形</summary>
      
    
    
    
    
    <category term="笔记" scheme="http://simuleite.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>SpringSecurity笔记</title>
    <link href="http://simuleite.github.io/ComputerScience/%E7%AC%94%E8%AE%B0/SpringSecurity%E7%AC%94%E8%AE%B0/"/>
    <id>http://simuleite.github.io/ComputerScience/%E7%AC%94%E8%AE%B0/SpringSecurity%E7%AC%94%E8%AE%B0/</id>
    <published>2024-12-04T16:00:00.000Z</published>
    <updated>2024-12-06T06:05:28.274Z</updated>
    
    <content type="html"><![CDATA[<h1 id="spring-security-初始化"><a class="markdownIt-Anchor" href="#spring-security-初始化"></a> Spring Security 初始化</h1><ol><li>导入依赖</li></ol><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>创建<code>SecurityInitializer</code></li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.init</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SecurityInitializer</span> <span class="keyword">extends</span> <span class="title class_">AbstractSecurityWebApplicationInitializer</span> &#123;</span><br><span class="line">    <span class="comment">//不用重写任何内容</span></span><br><span class="line">      <span class="comment">//这里实际上会自动注册一个Filter，SpringSecurity底层就是依靠N个过滤器实现的，我们之后再探讨</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>创建配置类</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.config</span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span>   <span class="comment">//开启WebSecurity相关功能</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SecurityConfiguration</span> &#123;</span><br><span class="line">        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li><code>MainInitializer</code>添加配置文件</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> Class&lt;?&gt;[] getRootConfigClasses() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;MainConfiguration.class, SecurityConfiguration.class&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="post表单认证"><a class="markdownIt-Anchor" href="#post表单认证"></a> Post表单认证</h1><p>在POST请求中需要携带页面中的csrfToken，否则一律进行拦截操作</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">th:id</span>=<span class="string">&quot;$&#123;_csrf.getParameterName()&#125;&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;_csrf.token&#125;&quot;</span> <span class="attr">hidden</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="密码加密"><a class="markdownIt-Anchor" href="#密码加密"></a> 密码加密</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SecurityConfiguration</span> &#123;</span><br><span class="line">    </span><br><span class="line">      <span class="comment">//将BCryptPasswordEncoder直接注册为Bean，Security会自动进行选择</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> PasswordEncoder <span class="title function_">passwordEncoder</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">BCryptPasswordEncoder</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">encoder.encode(yourPassword);</span><br></pre></td></tr></table></figure><h1 id="关闭csfr"><a class="markdownIt-Anchor" href="#关闭csfr"></a> 关闭CSFR</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SecurityConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> SecurityFilterChain <span class="title function_">filterChain</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> http</span><br><span class="line">                .csfr(conf -&gt; &#123;</span><br><span class="line">                    <span class="comment">// 关闭CSFR</span></span><br><span class="line">                    conf.disable();</span><br><span class="line">                &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="自定义登录页"><a class="markdownIt-Anchor" href="#自定义登录页"></a> 自定义登录页</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SecurityConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> SecurityFilterChain <span class="title function_">filterChain</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> http</span><br><span class="line">                <span class="comment">// 验证请求拦截和放行配置</span></span><br><span class="line">                .authorizeHttpRequests(auth -&gt; &#123;</span><br><span class="line">                    <span class="comment">// 将所有请求全部拦截，一律需要验证</span></span><br><span class="line">                    auth.anyRequest().authenticated();    </span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="comment">// 表单登录相关配置</span></span><br><span class="line">                .formLogin(conf -&gt; &#123;</span><br><span class="line">                    conf.loginPage(<span class="string">&quot;/login&quot;</span>);   <span class="comment">// 将登录页设置为我们自己的登录页面</span></span><br><span class="line">                    conf.loginProcessingUrl(<span class="string">&quot;/doLogin&quot;</span>); <span class="comment">// 登录表单提交的地址，可以自定义</span></span><br><span class="line">                    conf.defaultSuccessUrl(<span class="string">&quot;/&quot;</span>);   <span class="comment">// 登录成功后跳转的页面</span></span><br><span class="line">                    conf.permitAll();    <span class="comment">// 将登录相关的地址放行，否则未登录的用户无法进入登录界面</span></span><br><span class="line">                      <span class="comment">// 用户名和密码的表单字段名称</span></span><br><span class="line">                    conf.usernameParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">                    conf.passwordParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="comment">// 退出登录</span></span><br><span class="line">                .logout(conf -&gt; &#123;</span><br><span class="line">                    ...</span><br><span class="line">                &#125;)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="记住密码"><a class="markdownIt-Anchor" href="#记住密码"></a> 记住密码</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SecurityConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> SecurityFilterChain <span class="title function_">filterChain</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> http</span><br><span class="line">                .rememberMe(conf -&gt; &#123;</span><br><span class="line">                    conf.alwaysRemember(<span class="literal">false</span>);</span><br><span class="line">                &#125;)</span><br><span class="line"> </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;spring-security-初始化&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#spring-security-初始化&quot;&gt;&lt;/a&gt; Spring Security 初始化&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;导入依赖&lt;/li&gt;
&lt;/ol&gt;</summary>
      
    
    
    
    
    <category term="笔记" scheme="http://simuleite.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>SpringMVC笔记</title>
    <link href="http://simuleite.github.io/ComputerScience/%E7%AC%94%E8%AE%B0/SpringMVC%E7%AC%94%E8%AE%B0/"/>
    <id>http://simuleite.github.io/ComputerScience/%E7%AC%94%E8%AE%B0/SpringMVC%E7%AC%94%E8%AE%B0/</id>
    <published>2024-12-03T16:00:00.000Z</published>
    <updated>2024-12-05T05:55:20.890Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mvc"><a class="markdownIt-Anchor" href="#mvc"></a> MVC</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="controller"><a class="markdownIt-Anchor" href="#controller"></a> Controller</h1><h2 id="页面"><a class="markdownIt-Anchor" href="#页面"></a> 页面</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span>   <span class="comment">//直接添加注解即可</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/index&quot;)</span>   <span class="comment">//直接填写访问路径</span></span><br><span class="line">    <span class="keyword">public</span> ModelAndView <span class="title function_">index</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">ModelAndView</span> <span class="variable">modelAndView</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>(<span class="string">&quot;index&quot;</span>);</span><br><span class="line">        modelAndView.getModel().put(<span class="string">&quot;arg&quot;</span>, <span class="string">&quot;value&quot;</span>);   <span class="comment">//将name传递给Model</span></span><br><span class="line">        <span class="keyword">return</span> modelAndView;</span><br><span class="line">          <span class="comment">//返回后会经过视图解析器进行处理</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/index&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">index</span><span class="params">(Model model)</span>&#123;  <span class="comment">//这里不仅仅可以是Model，还可以是Map、ModelMap</span></span><br><span class="line">        model.addAttribute(<span class="string">&quot;arg&quot;</span>, <span class="string">&quot;value&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="重定向"><a class="markdownIt-Anchor" href="#重定向"></a> 重定向</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/index&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">index</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;redirect:page&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="请求转发"><a class="markdownIt-Anchor" href="#请求转发"></a> 请求转发</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/index&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">index</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;forward:home&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="bean的web作用域"><a class="markdownIt-Anchor" href="#bean的web作用域"></a> Bean的Web作用域</h1><p>Bean的作用域：</p><ol><li>Singleton</li><li>Prototype</li><li>Request HTTP请求产生新实例，结束后Bean消失</li><li>Session 每一个会话</li><li>Global Session</li></ol><h1 id="restful"><a class="markdownIt-Anchor" href="#restful"></a> RESTFul</h1><blockquote><p>一种设计风格。RESTful风格的设计允许将参数通过URL拼接传到服务端。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://localhost:8080/mvc/index/13579</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/index/&#123;str&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">index</span><span class="params">(<span class="meta">@PathVariable</span> String str)</span> &#123;</span><br><span class="line">    System.out.println(str);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="文件上传"><a class="markdownIt-Anchor" href="#文件上传"></a> 文件上传</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainInitializer</span> <span class="keyword">extends</span> <span class="title class_">AbstractAnnotationConfigDispatcherServletInitializer</span> &#123;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">customizeRegistration</span><span class="params">(ServletRegistration.Dynamic registration)</span> &#123;</span><br><span class="line">          <span class="comment">// 直接通过registration配置Multipart相关配置，必须配置临时上传路径，建议选择方便打开的</span></span><br><span class="line">        <span class="comment">// 同样可以设置其他属性：maxFileSize, maxRequestSize, fileSizeThreshold</span></span><br><span class="line">        registration.setMultipartConfig(<span class="keyword">new</span> <span class="title class_">MultipartConfigElement</span>(<span class="string">&quot;/path/to/save&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Controller模板</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/upload&quot;, method = RequestMethod.POST)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">upload</span><span class="params">(<span class="meta">@RequestParam</span> MultipartFile file)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="type">File</span> <span class="variable">fileObj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;filename.png&quot;</span>);</span><br><span class="line">    file.transferTo(fileObj);</span><br><span class="line">    System.out.println(<span class="string">&quot;用户上传的文件已保存到：&quot;</span>+fileObj.getAbsolutePath());</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;文件上传成功！&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>前端模板</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;upload&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;mvc&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#mvc&quot;&gt;&lt;/a&gt; MVC&lt;/h1&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span cla</summary>
      
    
    
    
    
    <category term="笔记" scheme="http://simuleite.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Spring核心技术</title>
    <link href="http://simuleite.github.io/ComputerScience/%E7%AC%94%E8%AE%B0/Spring%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF/"/>
    <id>http://simuleite.github.io/ComputerScience/%E7%AC%94%E8%AE%B0/Spring%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF/</id>
    <published>2024-11-29T16:00:00.000Z</published>
    <updated>2024-11-30T07:37:45.132Z</updated>
    
    <content type="html"><![CDATA[<h1 id="maven依赖"><a class="markdownIt-Anchor" href="#maven依赖"></a> Maven依赖</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="注解开发"><a class="markdownIt-Anchor" href="#注解开发"></a> 注解开发</h1><p>使用xml</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt; &lt;beans xmlns=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span> xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> xsi:schemaLocation=<span class="string">&quot;http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt; &lt;/beans&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">      <span class="comment">//ApplicationContext是应用程序上下文的顶层接口，它有很多种实现，这里我们先介绍第一种</span></span><br><span class="line">      <span class="comment">//因为这里使用的是XML配置文件，所以说我们就使用 ClassPathXmlApplicationContext 这个实现类</span></span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;application.xml&quot;</span>);  <span class="comment">//这里写上刚刚的名字</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用注解</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>(MainConfiguration.class);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainConfiguration</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyClass</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    SomeClass someClass;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;maven依赖&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#maven依赖&quot;&gt;&lt;/a&gt; Maven依赖&lt;/h1&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;p</summary>
      
    
    
    
    
    <category term="笔记" scheme="http://simuleite.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Web笔记</title>
    <link href="http://simuleite.github.io/ComputerScience/%E7%AC%94%E8%AE%B0/Web%E7%AC%94%E8%AE%B0/"/>
    <id>http://simuleite.github.io/ComputerScience/%E7%AC%94%E8%AE%B0/Web%E7%AC%94%E8%AE%B0/</id>
    <published>2024-11-27T16:00:00.000Z</published>
    <updated>2024-12-04T07:07:41.754Z</updated>
    
    <content type="html"><![CDATA[<h1 id="tomcat"><a class="markdownIt-Anchor" href="#tomcat"></a> Tomcat</h1><h2 id="jre报错"><a class="markdownIt-Anchor" href="#jre报错"></a> JRE报错</h2><p>一般教程会让我们配置<code>JAVA_HOME</code>和<code>JRE_HOME</code>，然后启动Tomcat；<br />然而，在JDK9以后，就不默认包含JRE了。<br />此时，我们使用命令</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">jlink --module-path jmods --add-modules java.desktop --output jre</span><br></pre></td></tr></table></figure><p>生成一个JRE后，启动Tomcat，就会报错：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">WARNING: Unknown module: java.rmi specified to --add-opens</span><br><span class="line">Exception in thread &quot;main&quot; java.lang.NoClassDefFoundError: java/util/logging/Logger</span><br><span class="line">    at org.apache.juli.logging.DirectJDKLog.&lt;init&gt;(DirectJDKLog.java:61)</span><br><span class="line">    at org.apache.juli.logging.DirectJDKLog.getInstance(DirectJDKLog.java:181)</span><br><span class="line">    at org.apache.juli.logging.LogFactory.getInstance(LogFactory.java:133)</span><br><span class="line">    at org.apache.juli.logging.LogFactory.getInstance(LogFactory.java:156)</span><br><span class="line">    at org.apache.juli.logging.LogFactory.getLog(LogFactory.java:211)</span><br><span class="line">    at org.apache.catalina.startup.Bootstrap.&lt;clinit&gt;(Bootstrap.java:49)</span><br><span class="line">Caused by: java.lang.ClassNotFoundException: java.util.logging.Logger</span><br><span class="line">    at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)</span><br><span class="line">    at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)</span><br><span class="line">    at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)</span><br><span class="line">    ... 6 more</span><br></pre></td></tr></table></figure><p>这时候，只需要把jre文件和<code>JRE_HOME</code>环境变量删除，Tomcat就能正常启动</p><span id="more"></span><h1 id="cookies"><a class="markdownIt-Anchor" href="#cookies"></a> Cookies</h1><h2 id="remember-me"><a class="markdownIt-Anchor" href="#remember-me"></a> Remember-me</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;记住密码&quot;</span> <span class="attr">name</span>=<span class="string">&quot;remember-me&quot;</span>&gt;</span></span><br><span class="line">        记住密码</span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Post请求的表单数据</span></span><br><span class="line">Map&lt;String, String[]&gt; reqMap = req.getParameterMap();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(map.containsKey(<span class="string">&quot;remember-me&quot;</span>))&#123;   <span class="comment">//若勾选了勾选框，那么会此表单信息</span></span><br><span class="line">    <span class="type">Cookie</span> <span class="variable">cookie_username</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cookie</span>(<span class="string">&quot;username&quot;</span>, username);</span><br><span class="line">    cookie_username.setMaxAge(<span class="number">30</span>);</span><br><span class="line">    <span class="type">Cookie</span> <span class="variable">cookie_password</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cookie</span>(<span class="string">&quot;password&quot;</span>, password);</span><br><span class="line">    cookie_password.setMaxAge(<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">    resp.addCookie(cookie_username);</span><br><span class="line">    resp.addCookie(cookie_password);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">    Cookie[] cookies = req.getCookies();</span><br><span class="line">    <span class="keyword">if</span>(cookies != <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">            <span class="keyword">if</span>(cookie.getName().equals(<span class="string">&quot;username&quot;</span>)) username = cookie.getValue();</span><br><span class="line">            <span class="keyword">if</span>(cookie.getName().equals(<span class="string">&quot;password&quot;</span>)) password = cookie.getValue();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(username != <span class="literal">null</span> &amp;&amp; password != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="comment">// 登陆校验</span></span><br><span class="line">            <span class="keyword">try</span> (<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> factory.openSession(<span class="literal">true</span>))&#123;</span><br><span class="line">                <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">                <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> mapper.getUser(username, password);</span><br><span class="line">                <span class="keyword">if</span>(user != <span class="literal">null</span>)&#123;</span><br><span class="line">                    resp.sendRedirect(<span class="string">&quot;index&quot;</span>);</span><br><span class="line">                    <span class="keyword">return</span>;   <span class="comment">// 直接返回</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    req.getRequestDispatcher(<span class="string">&quot;/&quot;</span>).forward(req, resp);   <span class="comment">// 正常情况还是转发给默认的Servlet帮我们返回静态页面</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="session"><a class="markdownIt-Anchor" href="#session"></a> Session</h2><blockquote><p>Session基于Cookies实现。Session使我们能够辨别不同用户的会话。</p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> req.getSession();</span><br><span class="line"></span><br><span class="line">session.setAttribute(<span class="string">&quot;user&quot;</span>, user);</span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) session.getAttribute(<span class="string">&quot;user&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="servlet"><a class="markdownIt-Anchor" href="#servlet"></a> Servlet</h1><p>一个Servlet的生命周期为：</p><ul><li>首先执行构造方法完成 Servlet 初始化</li><li>Servlet 初始化后调用 <code>init ()</code> 方法。</li><li>Servlet 调用 <code>service()</code> 方法来处理客户端的请求。</li><li>Servlet 销毁前调用 <code>destroy()</code> 方法。</li><li>最后，Servlet 是由 JVM 的垃圾回收器进行垃圾回收的。</li></ul><blockquote><p>Servlet 用于动态网页响应，使后端数据能够与前端通信。</p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/page&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PageServlet</span> <span class="keyword">implements</span> <span class="title class_">Servlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    doGet(req, resp) &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="上传文件"><a class="markdownIt-Anchor" href="#上传文件"></a> 上传文件</h2><p><a href="http://xn--commons-oc6k521z.io">使用commons.io</a></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>前端表单设置<code>multipart</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- multipart 传文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;file&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;test-file&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span>&gt;</span>上传文件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>后端定义Post方法</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@MultipartConfig</span> <span class="comment">// 文件传输注解</span></span><br><span class="line"><span class="meta">@WebServlet(&quot;/file&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="keyword">try</span>(<span class="type">FileOutputStream</span> <span class="variable">stream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;/Users/nagocoler/Documents/IdeaProjects/WebTest/test.png&quot;</span>))&#123;</span><br><span class="line">            <span class="type">Part</span> <span class="variable">part</span> <span class="operator">=</span> req.getPart(<span class="string">&quot;test-file&quot;</span>);</span><br><span class="line">            IOUtils.copy(part.getInputStream(), stream);</span><br><span class="line">            resp.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line">            resp.getWriter().write(<span class="string">&quot;文件上传成功！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="context"><a class="markdownIt-Anchor" href="#context"></a> Context</h2><blockquote><p>ServeletContext属于整个Web应用程序，全局唯一</p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">ServeltContext</span> <span class="variable">context</span> <span class="operator">=</span> getServletContext();</span><br><span class="line">context.setAttribute(<span class="string">&quot;key&quot;</span>, <span class="string">&quot;value&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="filter"><a class="markdownIt-Anchor" href="#filter"></a> Filter</h1><blockquote><p>Filter相当于在所有访问前加了一堵墙，来自浏览器的所有访问请求都会首先经过Filter。</p></blockquote><p>只有Filter允许通过的请求，才可以顺利到达Servlet。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebFileter(&quot;/*&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(req, resp, chain)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        chain.doFilter(req, res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;tomcat&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#tomcat&quot;&gt;&lt;/a&gt; Tomcat&lt;/h1&gt;
&lt;h2 id=&quot;jre报错&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#jre报错&quot;&gt;&lt;/a&gt; JRE报错&lt;/h2&gt;
&lt;p&gt;一般教程会让我们配置&lt;code&gt;JAVA_HOME&lt;/code&gt;和&lt;code&gt;JRE_HOME&lt;/code&gt;，然后启动Tomcat；&lt;br /&gt;
然而，在JDK9以后，就不默认包含JRE了。&lt;br /&gt;
此时，我们使用命令&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;jlink --module-path jmods --add-modules java.desktop --output jre&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;生成一个JRE后，启动Tomcat，就会报错：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;WARNING: Unknown module: java.rmi specified to --add-opens&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Exception in thread &amp;quot;main&amp;quot; java.lang.NoClassDefFoundError: java/util/logging/Logger&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at org.apache.juli.logging.DirectJDKLog.&amp;lt;init&amp;gt;(DirectJDKLog.java:61)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at org.apache.juli.logging.DirectJDKLog.getInstance(DirectJDKLog.java:181)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at org.apache.juli.logging.LogFactory.getInstance(LogFactory.java:133)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at org.apache.juli.logging.LogFactory.getInstance(LogFactory.java:156)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at org.apache.juli.logging.LogFactory.getLog(LogFactory.java:211)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at org.apache.catalina.startup.Bootstrap.&amp;lt;clinit&amp;gt;(Bootstrap.java:49)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Caused by: java.lang.ClassNotFoundException: java.util.logging.Logger&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ... 6 more&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这时候，只需要把jre文件和&lt;code&gt;JRE_HOME&lt;/code&gt;环境变量删除，Tomcat就能正常启动&lt;/p&gt;</summary>
    
    
    
    
    <category term="笔记" scheme="http://simuleite.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis使用</title>
    <link href="http://simuleite.github.io/ComputerScience/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/Mybatis%E4%BD%BF%E7%94%A8/"/>
    <id>http://simuleite.github.io/ComputerScience/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/Mybatis%E4%BD%BF%E7%94%A8/</id>
    <published>2024-11-22T16:00:00.000Z</published>
    <updated>2024-11-23T09:21:00.795Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mybatis-configxml"><a class="markdownIt-Anchor" href="#mybatis-configxml"></a> mybatis-config.xml</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">  <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">  <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span> <span class="comment">&lt;!-- 设置环境 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;驱动类（含包名）&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;数据库连接URL&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;用户名&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;密码&#125;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="util"><a class="markdownIt-Anchor" href="#util"></a> Util</h1><p>一般只需要创建一次，所以创建一个工具类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//在类加载时就进行创建</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            sqlSessionFactory = <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;mybatis-config.xml&quot;</span>));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取一个新的会话</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> autoCommit 是否开启自动提交（跟JDBC是一样的，如果不自动提交，则会变成事务操作）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> SqlSession对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title function_">getSession</span><span class="params">(<span class="type">boolean</span> autoCommit)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactory.openSession(autoCommit);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在其他函数里直接使用</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> (<span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtil.getSession(<span class="literal">true</span>)) &#123;</span><br><span class="line">    session.selectOne(<span class="string">&quot;id&quot;</span>, argu);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="mapper"><a class="markdownIt-Anchor" href="#mapper"></a> Mapper</h1><h2 id="原始方法"><a class="markdownIt-Anchor" href="#原始方法"></a> 原始方法</h2><ol><li>在<code>mybatis-config.xml</code>中添加</li></ol><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">url</span>=<span class="string">&quot;file:mappers/TestMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    这里用的是url，也可以使用其他类型，我们会在后面讲解    --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>定义<code>TestMapper.xml</code></li></ol><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.test.mapper.TestMapper&quot;</span>&gt;</span> <span class="comment">&lt;!-- 命名空间指明mapper接口名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectStudent&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.test.entity.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- id：函数名；resultType：返回类型 --&gt;</span></span><br><span class="line">        select * from student</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectOneStudent&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.test.entity.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- id：函数名；resultType：返回类型 --&gt;</span></span><br><span class="line">        select * from student where sid = #&#123;sid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> FileNotFoundException &#123;</span><br><span class="line">    <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;mybatis-config.xml&quot;</span>)); <span class="comment">// config 文件路径</span></span><br><span class="line">    <span class="keyword">try</span> (<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>))&#123;</span><br><span class="line">        List&lt;Student&gt; student = sqlSession.selectList(<span class="string">&quot;selectStudent&quot;</span>); <span class="comment">// xml id</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">stu3</span> <span class="operator">=</span> sqlSession.selectOne(<span class="string">&quot;selectOneStudent&quot;</span>, <span class="number">3</span>); <span class="comment">// 传参</span></span><br><span class="line">        student.forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="接口方法"><a class="markdownIt-Anchor" href="#接口方法"></a> 接口方法</h2><ol><li>在<code>mybatis-config.xml</code>中添加</li></ol><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/test/mapper/TestMapper.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>定义<code>TestMapper.xml</code>和接口<code>TestMapper.java</code></li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">TestMapper</span> &#123;</span><br><span class="line">    List&lt;Student&gt; <span class="title function_">selectStudent</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用-2"><a class="markdownIt-Anchor" href="#使用-2"></a> 使用</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> (<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> MybatisUtil.getSession(<span class="literal">true</span>))&#123;</span><br><span class="line">        <span class="type">TestMapper</span> <span class="variable">testMapper</span> <span class="operator">=</span> sqlSession.getMapper(TestMapper.class);</span><br><span class="line">        List&lt;Student&gt; student = testMapper.selectStudent(); <span class="comment">// 已经定义好了类型</span></span><br><span class="line">        student.forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注解方法"><a class="markdownIt-Anchor" href="#注解方法"></a> 注解方法</h2><ol><li>在<code>mybatis-config.xml</code>中添加</li></ol><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.test.mapper.TestMapper&quot;</span>/&gt;</span> </span><br><span class="line">    // 单个java class</span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">package</span>=<span class="string">&quot;com.test.mapper&quot;</span>/&gt;</span> </span><br><span class="line">    // 整个包</span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用-3"><a class="markdownIt-Anchor" href="#使用-3"></a> 使用</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">TestMapper</span> &#123;</span><br><span class="line">    <span class="meta">@Results(&#123;</span></span><br><span class="line"><span class="meta">        @Result(id = true, column = &quot;id&quot;, property = &quot;sid&quot;, </span></span><br><span class="line"><span class="meta">                one = @One(select = &quot;method&quot;)),</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="meta">@Select(&quot;select * from student&quot;)</span> <span class="comment">// 注解</span></span><br><span class="line">    List&lt;Student&gt; <span class="title function_">selectStudent</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select(&quot;select * from student where sid = #&#123;s&#125;, bid = #&#123;book.bid&#125;&quot;)</span></span><br><span class="line">    Student <span class="title function_">selectStudentBySid</span><span class="params">(<span class="meta">@Param(&quot;s&quot;)</span> <span class="type">int</span> sid, <span class="meta">@Param(&quot;book&quot;)</span> Book book)</span> <span class="comment">// 标明变量</span></span><br><span class="line"></span><br><span class="line">    Type <span class="title function_">method</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="动态sql"><a class="markdownIt-Anchor" href="#动态sql"></a> <a href="https://mybatis.org/mybatis-3/dynamic-sql.html">动态SQL</a></h1><h2 id="if"><a class="markdownIt-Anchor" href="#if"></a> if</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;argu == value&quot;</span>&gt;</span></span><br><span class="line">    // your sql query.</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;mybatis-configxml&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#mybatis-configxml&quot;&gt;&lt;/a&gt; mybatis-config.xml&lt;/h1&gt;
&lt;figure class=&quot;highlight xml&quot;</summary>
      
    
    
    
    
    <category term="基本操作" scheme="http://simuleite.github.io/tags/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>Maven使用</title>
    <link href="http://simuleite.github.io/ComputerScience/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/Maven%E4%BD%BF%E7%94%A8/"/>
    <id>http://simuleite.github.io/ComputerScience/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/Maven%E4%BD%BF%E7%94%A8/</id>
    <published>2024-11-22T16:00:00.000Z</published>
    <updated>2024-11-23T06:40:42.333Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本命令"><a class="markdownIt-Anchor" href="#基本命令"></a> 基本命令</h1><p><code>mvn package</code> 测试并打包到<code>target/</code>，使用<code>java -jar Project.jar</code>来运行</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;基本命令&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#基本命令&quot;&gt;&lt;/a&gt; 基本命令&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;mvn package&lt;/code&gt; 测试并打包到&lt;code&gt;target/&lt;/code&gt;，使用&lt;code&gt;java -</summary>
      
    
    
    
    
    <category term="基本操作" scheme="http://simuleite.github.io/tags/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>DP 设计模式</title>
    <link href="http://simuleite.github.io/ComputerScience/%E8%AF%BE%E7%A8%8B/DP%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>http://simuleite.github.io/ComputerScience/%E8%AF%BE%E7%A8%8B/DP%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</id>
    <published>2024-11-02T16:00:00.000Z</published>
    <updated>2024-11-29T03:06:01.459Z</updated>
    
    <content type="html"><![CDATA[<h1 id="策略模式"><a class="markdownIt-Anchor" href="#策略模式"></a> 策略模式</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MallardDuck</span> <span class="keyword">extends</span> <span class="title class_">Duck</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MallardDuck</span><span class="params">()</span> &#123;</span><br><span class="line">        quackBehavior = <span class="keyword">new</span> <span class="title class_">Quack</span>();</span><br><span class="line">        flyBehavior = <span class="keyword">new</span> <span class="title class_">FlyWithWings</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ModelDuck</span> <span class="keyword">extends</span> <span class="title class_">Duck</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ModelDuck</span><span class="params">()</span> &#123;</span><br><span class="line">        quackBehavior = <span class="keyword">new</span> <span class="title class_">Quack</span>();</span><br><span class="line">        flyBehavior = <span class="keyword">new</span> <span class="title class_">FlyNoWay</span>(); <span class="comment">// 组合不同的方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Duck</span> <span class="variable">real</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MallardDuck</span>();</span><br><span class="line">        <span class="type">Duck</span> <span class="variable">model</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModelDuck</span>();</span><br><span class="line"></span><br><span class="line">        real.fly();</span><br><span class="line">        model.fly(); <span class="comment">// 调用同样的接口</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>识别应用中变化的方面，把它们和不变的方面分开。</p></blockquote><blockquote><p>针对接口编程，而不是针对实现编程。</p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Implement</span></span><br><span class="line"><span class="type">Dog</span> <span class="variable">d</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>();</span><br><span class="line">d.bark();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Interface</span></span><br><span class="line"><span class="type">Animal</span> <span class="variable">dog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>();</span><br><span class="line">dog.makeSound(); <span class="comment">// abstract</span></span><br></pre></td></tr></table></figure><blockquote><p>优先使用组合而不是继承。</p></blockquote><h2 id="summary"><a class="markdownIt-Anchor" href="#summary"></a> summary</h2><p>策略模式定义了算法族并分别封装。策略让算法变化独立于使用它的客户。</p><span id="more"></span><h1 id="观察者模式"><a class="markdownIt-Anchor" href="#观察者模式"></a> 观察者模式</h1><p>不要打给我，我会打给你！</p><blockquote><p>尽量做到交互的对象之间的松耦合设计。</p></blockquote><h2 id="summary-2"><a class="markdownIt-Anchor" href="#summary-2"></a> summary</h2><p>观察者模式定义对象之间的一对多依赖，这样一来，当一个对象改变状态时，它的所有依赖者都会收到通知并自动更新。</p><h1 id="装饰者模式"><a class="markdownIt-Anchor" href="#装饰者模式"></a> 装饰者模式</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Expresso</span> <span class="keyword">extends</span> <span class="title class_">Beverage</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">cost</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1.99</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Milk</span> &#123;</span><br><span class="line">    Beverage beverage;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">cost</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// Decorator</span></span><br><span class="line">        <span class="keyword">return</span> cost + beverage.cost();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>类应该对拓展开放，对修改关闭。</p></blockquote><h2 id="summary-3"><a class="markdownIt-Anchor" href="#summary-3"></a> summary</h2><p>装饰者模式动态地将额外责任附加到对象上。对于拓展功能，装饰着提供子类化之外的弹性替代方案。</p><h1 id="工厂模式"><a class="markdownIt-Anchor" href="#工厂模式"></a> 工厂模式</h1><blockquote><p>依赖抽象，不依赖具体类。</p></blockquote><p>三条原则帮助你遵循依赖倒置：</p><ol><li>变量不应该持有到具体类的引用。</li><li>类不应该派生自具体类。</li><li>方法不覆盖基类已实现的方法。</li></ol><blockquote><p>[!Warning]<br />注意：完全实现上面三条原则是不可能的。尽量遵循即可。</p></blockquote><h2 id="summary-4"><a class="markdownIt-Anchor" href="#summary-4"></a> summary</h2><p>抽象工厂模式提供一个接口来创建相关或依赖对象的家族，而不需要指定具体类。</p><p>工厂模式定义了一个创建对象的接口，但由子类决定要实例化哪个类。工厂方法让类把实例化推迟到子类。</p><h1 id="单件模式"><a class="markdownIt-Anchor" href="#单件模式"></a> 单件模式</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> MyClass &#123;</span><br><span class="line">    <span class="comment">// 私有的构造方法</span></span><br><span class="line">    <span class="keyword">private</span> MyClass &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态的getter</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> MyClass <span class="title function_">getInstance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (uniqueClass == <span class="literal">null</span>) &#123;</span><br><span class="line">            uniqueClass = <span class="keyword">new</span> <span class="title class_">MyClass</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> uniqueClass;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="summary-5"><a class="markdownIt-Anchor" href="#summary-5"></a> summary</h2><p>单件模式确保一个类只有一个实例，并提供一个全局访问点。</p><h1 id="命令模式"><a class="markdownIt-Anchor" href="#命令模式"></a> 命令模式</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SomeControl</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCommand</span><span class="params">(Command command)</span> &#123;</span><br><span class="line">        slot = command;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">bottonWasPressed</span><span class="params">()</span> &#123;</span><br><span class="line">        slot.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SomeCommand</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">execute</span><span class="params">()</span> &#123;</span><br><span class="line">        on();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// execute和undo互为镜像</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">undo</span><span class="params">()</span> &#123;</span><br><span class="line">        off();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="summary-6"><a class="markdownIt-Anchor" href="#summary-6"></a> summary</h2><p>命令模式把请求封装为对象，以便用不同的请求、队列或日志请求，来参数化其他对象，并支持可撤销的操作。</p><h1 id="适配器模式"><a class="markdownIt-Anchor" href="#适配器模式"></a> 适配器模式</h1><blockquote><p>适配器改变接口以符合客户的期望。</p></blockquote><h2 id="summary-7"><a class="markdownIt-Anchor" href="#summary-7"></a> summary</h2><p>适配器模式，将一个类的接口转换成客户期望的另一个接口。适配器让原本接口不兼容的类可以合作。</p><h1 id="外观模式"><a class="markdownIt-Anchor" href="#外观模式"></a> 外观模式</h1><blockquote><p>外观模式将客户从一个复杂子系统解耦。</p></blockquote><h2 id="summary-8"><a class="markdownIt-Anchor" href="#summary-8"></a> summary</h2><p>外观模式，为子系统中的一组接口提供了一个统一的接口。外观定义了一个更高级别的接口，使得子系统更容易使用。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;策略模式&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#策略模式&quot;&gt;&lt;/a&gt; 策略模式&lt;/h1&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;MallardDuck&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;Duck&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title function_&quot;&gt;MallardDuck&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        quackBehavior = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;Quack&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        flyBehavior = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;FlyWithWings&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;ModelDuck&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;Duck&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title function_&quot;&gt;ModelDuck&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        quackBehavior = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;Quack&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        flyBehavior = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;FlyNoWay&lt;/span&gt;(); &lt;span class=&quot;comment&quot;&gt;// 组合不同的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;Main&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;Duck&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;real&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;MallardDuck&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;Duck&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;ModelDuck&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        real.fly();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        model.fly(); &lt;span class=&quot;comment&quot;&gt;// 调用同样的接口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;识别应用中变化的方面，把它们和不变的方面分开。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;针对接口编程，而不是针对实现编程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Implement&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Dog&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;Dog&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;d.bark();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Interface&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Animal&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;dog&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;Dog&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dog.makeSound(); &lt;span class=&quot;comment&quot;&gt;// abstract&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;优先使用组合而不是继承。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;summary&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#summary&quot;&gt;&lt;/a&gt; summary&lt;/h2&gt;
&lt;p&gt;策略模式定义了算法族并分别封装。策略让算法变化独立于使用它的客户。&lt;/p&gt;</summary>
    
    
    
    
    <category term="课程" scheme="http://simuleite.github.io/tags/%E8%AF%BE%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot 支付模块</title>
    <link href="http://simuleite.github.io/ComputerScience/%E9%A1%B9%E7%9B%AE/SpringBoot%20%E6%94%AF%E4%BB%98%E6%A8%A1%E5%9D%97/"/>
    <id>http://simuleite.github.io/ComputerScience/%E9%A1%B9%E7%9B%AE/SpringBoot%20%E6%94%AF%E4%BB%98%E6%A8%A1%E5%9D%97/</id>
    <published>2024-10-27T16:00:00.000Z</published>
    <updated>2024-10-28T12:37:27.151Z</updated>
    
    <content type="html"><![CDATA[<p>参考资料<br /><a href="https://gitee.com/52itstyle/spring-boot-pay/">Gitee项目</a><br /><a href="https://blog.csdn.net/m0_66490875/article/details/136842381">支付宝</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;参考资料&lt;br /&gt;
&lt;a href=&quot;https://gitee.com/52itstyle/spring-boot-pay/&quot;&gt;Gitee项目&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://blog.csdn.net/m0_66490875/article/de</summary>
      
    
    
    
    
    <category term="项目" scheme="http://simuleite.github.io/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>Redis使用</title>
    <link href="http://simuleite.github.io/ComputerScience/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/Redis%E4%BD%BF%E7%94%A8/"/>
    <id>http://simuleite.github.io/ComputerScience/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/Redis%E4%BD%BF%E7%94%A8/</id>
    <published>2024-10-26T16:00:00.000Z</published>
    <updated>2024-10-27T07:06:48.748Z</updated>
    
    <content type="html"><![CDATA[<h1 id="general"><a class="markdownIt-Anchor" href="#general"></a> General</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 返回给定模式的keys</span><br><span class="line">KEYS patter</span><br><span class="line">KEYS * # 返回全部</span><br><span class="line">KEYS set* # 返回set开头的keys</span><br><span class="line">EXISTS key</span><br><span class="line">TYPE key</span><br><span class="line">DEL key</span><br></pre></td></tr></table></figure><h1 id="string"><a class="markdownIt-Anchor" href="#string"></a> String</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SET key value</span><br><span class="line">GET key</span><br><span class="line"># Set Extend Time</span><br><span class="line">SETEX key seconds value</span><br><span class="line"># Set When Key Not Exist</span><br><span class="line">SETNX key value</span><br></pre></td></tr></table></figure><h1 id="hash"><a class="markdownIt-Anchor" href="#hash"></a> Hash</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HSET key field value</span><br><span class="line">HGET key field</span><br><span class="line">HDEL key field</span><br><span class="line"># Get All Fields</span><br><span class="line">HKEYS key</span><br><span class="line"># Get All Values</span><br><span class="line">HVALS key</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flowchart LR</span><br><span class="line">    key[key]</span><br><span class="line">    item[</span><br><span class="line">    field1: value1</span><br><span class="line">    field2: value2</span><br><span class="line">    ]</span><br><span class="line">    key --&gt; item</span><br></pre></td></tr></table></figure><h1 id="list"><a class="markdownIt-Anchor" href="#list"></a> List</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">LPUSH key value1 value2</span><br><span class="line"># Get Key From Start To Stop</span><br><span class="line">LRANGE key start stop</span><br><span class="line"># Right POP</span><br><span class="line">RPOP key</span><br><span class="line"># List Length</span><br><span class="line">LLEN key</span><br></pre></td></tr></table></figure><h1 id="set"><a class="markdownIt-Anchor" href="#set"></a> Set</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SADD key mem1 mem2</span><br><span class="line">SMEMBERS key</span><br><span class="line"># Set Size</span><br><span class="line">SCARD key</span><br><span class="line">SINTER key1 key2</span><br><span class="line">SUNION key1 key2</span><br><span class="line"># Delete</span><br><span class="line">SREM key mem1 mem2</span><br></pre></td></tr></table></figure><h1 id="sorted-set-zset"><a class="markdownIt-Anchor" href="#sorted-set-zset"></a> Sorted Set / ZSet</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ZADD key score1 mem1 score2 mem2</span><br><span class="line"># Show List</span><br><span class="line">ZRANGE key start stop (WITHSCORES)</span><br><span class="line"># Increse Member</span><br><span class="line">ZINCRBY key increment member</span><br><span class="line">ZREM key mem1 mem2</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="redis-for-java"><a class="markdownIt-Anchor" href="#redis-for-java"></a> Redis for Java</h1><ul><li>Jedis (Official Recommand)</li><li>Lettuce</li><li>Spring Data Redis</li></ul><h2 id="redis-data-redis"><a class="markdownIt-Anchor" href="#redis-data-redis"></a> Redis Data Redis</h2><figure class="highlight xml"><figcaption><span>pom.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Redis --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframwork.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><figcaption><span>application.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">yourPassword</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedisConfiguration</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RedisTemplate <span class="title function_">redisTemplate</span><span class="params">(RedisConnectionFactory redisConnectionFactory)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;开始创建Redis模板对象...&quot;</span>);</span><br><span class="line">        <span class="type">RedisTemplate</span> <span class="variable">redisTemplate</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RedisTemplate</span>();</span><br><span class="line">        <span class="comment">// Set Redis Connection Factory Object</span></span><br><span class="line">        redisTemplate.setConnectionFactory(redisConnectionFactory);</span><br><span class="line">        <span class="comment">// Set Key Serializer</span></span><br><span class="line">        redisTemplate.setKeySerializer(<span class="keyword">new</span> <span class="title class_">StringRedisSerializer</span>());</span><br><span class="line">        <span class="keyword">return</span> redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;general&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#general&quot;&gt;&lt;/a&gt; General&lt;/h1&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 返回给定模式的keys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;KEYS patter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;KEYS * # 返回全部&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;KEYS set* # 返回set开头的keys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EXISTS key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TYPE key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DEL key&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;string&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#string&quot;&gt;&lt;/a&gt; String&lt;/h1&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SET key value&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GET key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Set Extend Time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SETEX key seconds value&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Set When Key Not Exist&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SETNX key value&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;hash&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#hash&quot;&gt;&lt;/a&gt; Hash&lt;/h1&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;HSET key field value&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;HGET key field&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;HDEL key field&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Get All Fields&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;HKEYS key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Get All Values&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;HVALS key&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;flowchart LR&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    key[key]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    item[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    field1: value1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    field2: value2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    key --&amp;gt; item&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;list&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#list&quot;&gt;&lt;/a&gt; List&lt;/h1&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;LPUSH key value1 value2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Get Key From Start To Stop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LRANGE key start stop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Right POP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RPOP key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# List Length&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LLEN key&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;set&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#set&quot;&gt;&lt;/a&gt; Set&lt;/h1&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SADD key mem1 mem2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SMEMBERS key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Set Size&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SCARD key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SINTER key1 key2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SUNION key1 key2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Delete&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SREM key mem1 mem2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;sorted-set-zset&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sorted-set-zset&quot;&gt;&lt;/a&gt; Sorted Set / ZSet&lt;/h1&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ZADD key score1 mem1 score2 mem2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Show List&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ZRANGE key start stop (WITHSCORES)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Increse Member&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ZINCRBY key increment member&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ZREM key mem1 mem2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
    <category term="基本操作" scheme="http://simuleite.github.io/tags/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>动态规划学习指南</title>
    <link href="http://simuleite.github.io/ComputerScience/%E6%8C%87%E5%8D%97/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97/"/>
    <id>http://simuleite.github.io/ComputerScience/%E6%8C%87%E5%8D%97/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97/</id>
    <published>2024-10-21T16:00:00.000Z</published>
    <updated>2024-10-28T12:36:54.033Z</updated>
    
    <content type="html"><![CDATA[<p>Author：<strong><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/aatalyk">aatalyk</a></strong><br />Origin：<a href="https://leetcode.com/discuss/general-discussion/458695/dynamic-programming-patterns">Link</a></p><p>Before starting the topic let me introduce myself. I am a Mobile Developer currently working in Warsaw and spending my free time for interview preparations. I started to prepare for interviews two years ago. At that time I should say I could not solve the two sum problem. Easy problems seemed to me like hard ones so most of the time I had to look at editorials and discuss section. Currently, I have solved ~800 problems and time to time participate in contests. I usually solve 3 problems in a contest and sometimes 4 problems. Ok, lets come back to the topic.</p><p>Recently I have concentrated my attention on Dynamic Programming cause its one of the hardest topics in an interview prep. After solving ~140 problems in DP I have noticed that there are few patterns that can be found in different problems. So I did a research on that and find the following topics. I will not give complete ways how to solve problems but these patterns may be helpful in solving DP.</p><h2 id="patterns"><a class="markdownIt-Anchor" href="#patterns"></a> Patterns</h2><ol><li><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/discuss/general-discussion/458695/dynamic-programming-patterns%23Minimum-%28Maximum%29-Path-to-Reach-a-Target">Minimum (Maximum) Path to Reach a Target</a></li><li><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/discuss/general-discussion/458695/dynamic-programming-patterns%23distinct-ways">Distinct Ways</a></li><li><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/discuss/general-discussion/458695/dynamic-programming-patterns%23Merging-Intervals">Merging Intervals</a></li><li><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/discuss/general-discussion/458695/dynamic-programming-patterns%23DP-on-Strings">DP on Strings</a></li><li><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/discuss/general-discussion/458695/dynamic-programming-patterns%23Decision-Making">Decision Making</a></li></ol><span id="more"></span><h2 id="10-minimum-maximum-path-to-reach-a-target"><a class="markdownIt-Anchor" href="#10-minimum-maximum-path-to-reach-a-target"></a> 1.0 Minimum (Maximum) Path to Reach a Target</h2><p>最大最小的条件路径</p><p>Generate problem statement for this pattern</p><h3 id="statement"><a class="markdownIt-Anchor" href="#statement"></a> Statement</h3><blockquote><p>Given a target find minimum (maximum) cost / path / sum to reach the target.</p></blockquote><h3 id="approach"><a class="markdownIt-Anchor" href="#approach"></a> Approach</h3><blockquote><p>Choose minimum (maximum) path among all possible paths before the current state, then add value for the current state.</p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">routes[i] = min(routes[i-<span class="number">1</span>], routes[i-<span class="number">2</span>], ... , routes[i-k]) + cost[i]</span><br></pre></td></tr></table></figure><p>Generate optimal solutions for all values in the target and return the value for the target.</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= target; ++i) &#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; ways.size(); ++j) &#123;</span><br><span class="line">       <span class="keyword">if</span> (ways[j] &lt;= i) &#123;</span><br><span class="line">           dp[i] = min(dp[i], dp[i - ways[j]]) + cost / path / sum;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> dp[target]</span><br></pre></td></tr></table></figure><h3 id="similar-problems"><a class="markdownIt-Anchor" href="#similar-problems"></a> Similar Problems</h3><p><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/min-cost-climbing-stairs/">746. Min Cost Climbing Stairs</a> <code>Easy</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">   dp[i] = min(dp[i-<span class="number">1</span>], dp[i-<span class="number">2</span>]) + (i == n ? <span class="number">0</span> : cost[i]);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> dp[n]</span><br></pre></td></tr></table></figure><p><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/minimum-path-sum/">64. Minimum Path Sum</a> <code>Medium</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt; m; ++j) &#123;</span><br><span class="line">       grid[i][j] = min(grid[i-<span class="number">1</span>][j], grid[i][j-<span class="number">1</span>]) + grid[i][j];</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> grid[n-<span class="number">1</span>][m-<span class="number">1</span>]</span><br></pre></td></tr></table></figure><p><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/coin-change/">322. Coin Change</a> <code>Medium</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= amount; ++j) &#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; coins.size(); ++i) &#123;</span><br><span class="line">       <span class="keyword">if</span> (coins[i] &lt;= j) &#123;</span><br><span class="line">           dp[j] = min(dp[j], dp[j - coins[i]] + <span class="number">1</span>);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/minimum-falling-path-sum/">931. Minimum Falling Path Sum</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/minimum-cost-for-tickets/">983. Minimum Cost For Tickets</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/2-keys-keyboard/">650. 2 Keys Keyboard</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/perfect-squares/">279. Perfect Squares</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/last-stone-weight-ii/">1049. Last Stone Weight II</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/triangle/">120. Triangle</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/ones-and-zeroes/">474. Ones and Zeroes</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/maximal-square/">221. Maximal Square</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/coin-change/">322. Coin Change</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/tiling-a-rectangle-with-the-fewest-squares/">1240. Tiling a Rectangle with the Fewest Squares</a> <code>Hard</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/dungeon-game/">174. Dungeon Game</a> <code>Hard</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/minimum-number-of-refueling-stops/">871. Minimum Number of Refueling Stops</a> <code>Hard</code></p><h2 id="20-distinct-ways"><a class="markdownIt-Anchor" href="#20-distinct-ways"></a> 2.0 Distinct Ways</h2><p>达到目标的不同方式总数</p><p>Generate problem statement for this pattern</p><h3 id="statement问题描述"><a class="markdownIt-Anchor" href="#statement问题描述"></a> Statement，问题描述</h3><blockquote><p>Given a target find a number of distinct ways to reach the target.</p></blockquote><h3 id="approach解题方法"><a class="markdownIt-Anchor" href="#approach解题方法"></a> Approach，解题方法</h3><blockquote><p>Sum all possible ways to reach the current state.</p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">routes[i] = routes[i-<span class="number">1</span>] + routes[i-<span class="number">2</span>], ... , + routes[i-k]</span><br></pre></td></tr></table></figure><p>Generate sum for all values in the target and return the value for the target.</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= target; ++i) &#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; ways.size(); ++j) &#123;</span><br><span class="line">       <span class="keyword">if</span> (ways[j] &lt;= i) &#123;</span><br><span class="line">           dp[i] += dp[i - ways[j]];</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> dp[target]</span><br></pre></td></tr></table></figure><h3 id="similar-problems-2"><a class="markdownIt-Anchor" href="#similar-problems-2"></a> Similar Problems</h3><p><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/climbing-stairs/">70. Climbing Stairs</a> <code>easy</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">stair</span> <span class="operator">=</span> <span class="number">2</span>; stair &lt;= n; ++stair) &#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">step</span> <span class="operator">=</span> <span class="number">1</span>; step &lt;= <span class="number">2</span>; ++step) &#123;</span><br><span class="line">       dp[stair] += dp[stair-step];   </span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/unique-paths/">62. Unique Paths</a> <code>Medium</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; m; ++i) &#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt; n; ++j) &#123;</span><br><span class="line">       dp[i][j] = dp[i][j-<span class="number">1</span>] + dp[i-<span class="number">1</span>][j];</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/number-of-dice-rolls-with-target-sum/">1155. Number of Dice Rolls With Target Sum</a> <code>Medium</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">rep</span> <span class="operator">=</span> <span class="number">1</span>; rep &lt;= d; ++rep) &#123;</span><br><span class="line">   vector&lt;<span class="type">int</span>&gt; <span class="title function_">new_ways</span><span class="params">(target+<span class="number">1</span>)</span>;</span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">already</span> <span class="operator">=</span> <span class="number">0</span>; already &lt;= target; ++already) &#123;</span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">pipe</span> <span class="operator">=</span> <span class="number">1</span>; pipe &lt;= f; ++pipe) &#123;</span><br><span class="line">           <span class="keyword">if</span> (already - pipe &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">               new_ways[already] += ways[already - pipe];</span><br><span class="line">               new_ways[already] %= mod;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   ways = new_ways;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Note，备注</strong><br />Some questions point out the number of repetitions, in that case, add one more loop to simulate every repetition.<br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/knight-probability-in-chessboard/">688. Knight Probability in Chessboard</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/target-sum/">494. Target Sum</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/combination-sum-iv/">377. Combination Sum IV</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/knight-dialer/">935. Knight Dialer</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/dice-roll-simulation/">1223. Dice Roll Simulation</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/partition-equal-subset-sum/">416. Partition Equal Subset Sum</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/soup-servings/">808. Soup Servings</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/domino-and-tromino-tiling/">790. Domino and Tromino Tiling</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/minimum-swaps-to-make-sequences-increasing/">801. Minimum Swaps To Make Sequences Increasing</a><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/number-of-longest-increasing-subsequence/">673. Number of Longest Increasing Subsequence</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/unique-paths-ii/">63. Unique Paths II</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/out-of-boundary-paths/">576. Out of Boundary Paths</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/number-of-ways-to-stay-in-the-same-place-after-some-steps/">1269. Number of Ways to Stay in the Same Place After Some Steps</a> <code>Hard</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/count-vowels-permutation/">1220. Count Vowels Permutation</a> <code>Hard</code></p><h2 id="30-merging-intervals"><a class="markdownIt-Anchor" href="#30-merging-intervals"></a> 3.0 Merging Intervals</h2><p>区间合并</p><p>Generate problem statement for this pattern</p><h3 id="statement问题描述-2"><a class="markdownIt-Anchor" href="#statement问题描述-2"></a> Statement，问题描述</h3><blockquote><p>Given a set of numbers find an optimal solution for a problem considering the current number and the best you can get from the left and right sides.</p></blockquote><h3 id="approach解法方法"><a class="markdownIt-Anchor" href="#approach解法方法"></a> Approach，解法方法</h3><blockquote><p>Find all optimal solutions for every interval and return the best possible answer.</p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// from i to j</span></span><br><span class="line">dp[i][j] = dp[i][k] + result[k] + dp[k+<span class="number">1</span>][j]</span><br></pre></td></tr></table></figure><p>Get the best from the left and right sides and add a solution for the current position.</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">1</span>; l&lt;n; l++) &#123;</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i&lt;n-l; i++) &#123;</span><br><span class="line">       <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i+l;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> i; k&lt;j; k++) &#123;</span><br><span class="line">           dp[i][j] = max(dp[i][j], dp[i][k] + result[k] + dp[k+<span class="number">1</span>][j]);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> dp[<span class="number">0</span>][n-<span class="number">1</span>]</span><br></pre></td></tr></table></figure><h3 id="similar-problems类似问题"><a class="markdownIt-Anchor" href="#similar-problems类似问题"></a> Similar Problems，类似问题</h3><p><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/minimum-cost-tree-from-leaf-values/">1130. Minimum Cost Tree From Leaf Values</a> <code>Medium</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">1</span>; l &lt; n; ++l) &#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n - l; ++i) &#123;</span><br><span class="line">       <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i + l;</span><br><span class="line">       dp[i][j] = INT_MAX;</span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> i; k &lt; j; ++k) &#123;</span><br><span class="line">           dp[i][j] = min(dp[i][j], dp[i][k] + dp[k+<span class="number">1</span>][j] + maxs[i][k] * maxs[k+<span class="number">1</span>][j]);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/unique-binary-search-trees/">96. Unique Binary Search Trees</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/minimum-score-triangulation-of-polygon/">1039. Minimum Score Triangulation of Polygon</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/remove-boxes/">546. Remove Boxes</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/minimum-cost-to-merge-stones/">1000. Minimum Cost to Merge Stones</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/burst-balloons/">312. Burst Balloons</a> <code>Hard</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/guess-number-higher-or-lower-ii/">375. Guess Number Higher or Lower II</a> <code>Medium</code></p><h2 id="40-dp-on-strings"><a class="markdownIt-Anchor" href="#40-dp-on-strings"></a> 4.0 DP on Strings</h2><p>字符串上的DP</p><p>General problem statement for this pattern can vary but most of the time you are given two strings where lengths of those strings are not big</p><h3 id="statement问题描述-3"><a class="markdownIt-Anchor" href="#statement问题描述-3"></a> Statement，问题描述</h3><blockquote><p>Given two strings <code>s1</code> and <code>s2</code>, return <code>some result</code>.</p></blockquote><h3 id="approach解决方法"><a class="markdownIt-Anchor" href="#approach解决方法"></a> Approach，解决方法</h3><blockquote><p>Most of the problems on this pattern requires a solution that can be accepted in O(n^2) complexity.</p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// i - indexing string s1</span></span><br><span class="line"><span class="comment">// j - indexing string s2</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= m; ++j) &#123;</span><br><span class="line">       <span class="keyword">if</span> (s1[i-<span class="number">1</span>] == s2[j-<span class="number">1</span>]) &#123;</span><br><span class="line">           dp[i][j] = <span class="comment">/*code*/</span>;</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           dp[i][j] = <span class="comment">/*code*/</span>;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>If you are given one string <code>s</code> the approach may little vary</p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">1</span>; l &lt; n; ++l) &#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n-l; ++i) &#123;</span><br><span class="line">       <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i + l;</span><br><span class="line">       <span class="keyword">if</span> (s[i] == s[j]) &#123;</span><br><span class="line">           dp[i][j] = <span class="comment">/*code*/</span>;</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           dp[i][j] = <span class="comment">/*code*/</span>;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/longest-common-subsequence/">1143. Longest Common Subsequence</a> <code>Medium</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= m; ++j) &#123;</span><br><span class="line">       <span class="keyword">if</span> (text1[i-<span class="number">1</span>] == text2[j-<span class="number">1</span>]) &#123;</span><br><span class="line">           dp[i][j] = dp[i-<span class="number">1</span>][j-<span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           dp[i][j] = max(dp[i-<span class="number">1</span>][j], dp[i][j-<span class="number">1</span>]);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/palindromic-substrings/">647. Palindromic Substrings</a> <code>Medium</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">1</span>; l &lt; n; ++l) &#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n-l; ++i) &#123;</span><br><span class="line">       <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i + l;</span><br><span class="line">       <span class="keyword">if</span> (s[i] == s[j] &amp;&amp; dp[i+<span class="number">1</span>][j-<span class="number">1</span>] == j-i-<span class="number">1</span>) &#123;</span><br><span class="line">           dp[i][j] = dp[i+<span class="number">1</span>][j-<span class="number">1</span>] + <span class="number">2</span>;</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           dp[i][j] = <span class="number">0</span>;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/longest-palindromic-subsequence/">516. Longest Palindromic Subsequence</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/shortest-common-supersequence/">1092. Shortest Common Supersequence</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/edit-distance/">72. Edit Distance</a> <code>Hard</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/distinct-subsequences/">115. Distinct Subsequences</a> <code>Hard</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/">712. Minimum ASCII Delete Sum for Two Strings</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/longest-palindromic-substring/">5. Longest Palindromic Substring</a> <code>Medium</code></p><h2 id="50-decision-making"><a class="markdownIt-Anchor" href="#50-decision-making"></a> 5.0 Decision Making</h2><p>决策，取不取当前元素</p><p>The general problem statement for this pattern is forgiven situation decide whether to use or not to use the current state. So, the problem requires you to make a decision at a current state.</p><h3 id="statement问题描述-4"><a class="markdownIt-Anchor" href="#statement问题描述-4"></a> Statement，问题描述</h3><blockquote><p>Given a set of values find an answer with an option to choose or ignore the current value.</p></blockquote><h3 id="approach解决方法-2"><a class="markdownIt-Anchor" href="#approach解决方法-2"></a> Approach，解决方法</h3><blockquote><p>If you decide to choose the current value use the previous result where the value was ignored; vice-versa, if you decide to ignore the current value use previous result where value was used.</p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// i - indexing a set of values</span></span><br><span class="line"><span class="comment">// j - options to ignore j values</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= k; ++j) &#123;</span><br><span class="line">       dp[i][j] = max(&#123;dp[i][j], dp[i-<span class="number">1</span>][j] + arr[i], dp[i-<span class="number">1</span>][j-<span class="number">1</span>]&#125;);</span><br><span class="line">       dp[i][j-<span class="number">1</span>] = max(&#123;dp[i][j-<span class="number">1</span>], dp[i-<span class="number">1</span>][j-<span class="number">1</span>] + arr[i], arr[i]&#125;);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/house-robber/">198. House Robber</a> <code>Easy</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">   dp[i][<span class="number">1</span>] = max(dp[i-<span class="number">1</span>][<span class="number">0</span>] + nums[i], dp[i-<span class="number">1</span>][<span class="number">1</span>]);</span><br><span class="line">   dp[i][<span class="number">0</span>] = dp[i-<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/best-time-to-buy-and-sell-stock/">121. Best Time to Buy and Sell Stock</a> <code>Easy</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/">714. Best Time to Buy and Sell Stock with Transaction Fee</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/">309. Best Time to Buy and Sell Stock with Cooldown</a> <code>Medium</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/">123. Best Time to Buy and Sell Stock III</a> <code>Hard</code><br /><a href="https://link.zhihu.com/?target=https%3A//leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/">188. Best Time to Buy and Sell Stock IV</a> <code>Hard</code></p><p>I hope these tips will be helpful.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Author：&lt;strong&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//leetcode.com/aatalyk&quot;&gt;aatalyk&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
Origin：&lt;a href=&quot;https://leetcode.com/discuss/general-discussion/458695/dynamic-programming-patterns&quot;&gt;Link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Before starting the topic let me introduce myself. I am a Mobile Developer currently working in Warsaw and spending my free time for interview preparations. I started to prepare for interviews two years ago. At that time I should say I could not solve the two sum problem. Easy problems seemed to me like hard ones so most of the time I had to look at editorials and discuss section. Currently, I have solved ~800 problems and time to time participate in contests. I usually solve 3 problems in a contest and sometimes 4 problems. Ok, lets come back to the topic.&lt;/p&gt;
&lt;p&gt;Recently I have concentrated my attention on Dynamic Programming cause its one of the hardest topics in an interview prep. After solving ~140 problems in DP I have noticed that there are few patterns that can be found in different problems. So I did a research on that and find the following topics. I will not give complete ways how to solve problems but these patterns may be helpful in solving DP.&lt;/p&gt;
&lt;h2 id=&quot;patterns&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#patterns&quot;&gt;&lt;/a&gt; Patterns&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//leetcode.com/discuss/general-discussion/458695/dynamic-programming-patterns%23Minimum-%28Maximum%29-Path-to-Reach-a-Target&quot;&gt;Minimum (Maximum) Path to Reach a Target&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//leetcode.com/discuss/general-discussion/458695/dynamic-programming-patterns%23distinct-ways&quot;&gt;Distinct Ways&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//leetcode.com/discuss/general-discussion/458695/dynamic-programming-patterns%23Merging-Intervals&quot;&gt;Merging Intervals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//leetcode.com/discuss/general-discussion/458695/dynamic-programming-patterns%23DP-on-Strings&quot;&gt;DP on Strings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//leetcode.com/discuss/general-discussion/458695/dynamic-programming-patterns%23Decision-Making&quot;&gt;Decision Making&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    
    <category term="指南" scheme="http://simuleite.github.io/tags/%E6%8C%87%E5%8D%97/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode100 错题本</title>
    <link href="http://simuleite.github.io/ComputerScience/%E7%AC%94%E8%AE%B0/LeetCode100%20%E9%94%99%E9%A2%98%E6%9C%AC/"/>
    <id>http://simuleite.github.io/ComputerScience/%E7%AC%94%E8%AE%B0/LeetCode100%20%E9%94%99%E9%A2%98%E6%9C%AC/</id>
    <published>2024-09-30T16:00:00.000Z</published>
    <updated>2024-11-05T03:27:07.647Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hash"><a class="markdownIt-Anchor" href="#hash"></a> Hash</h1><h1 id="字母异位词"><a class="markdownIt-Anchor" href="#字母异位词"></a> 字母异位词</h1><p>排序每一个单词，就知道是不是异位词。</p><h2 id="两数之和"><a class="markdownIt-Anchor" href="#两数之和"></a> 两数之和</h2><p>从数组中，找到<code>nums[i] + nums[j] == target</code>，并返回<code>&#123; i, j &#125;</code>。<br />思路是双重循环，遍历每一个元素，求和是否为target。<br />然而，双重循环需要<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的复杂度。因此，可以使用一张表，使用<code>containsKey</code>方法识别是否存在当前i的<code>target - nums[i]</code>，即可减少一重循环。</p><h3 id="关键思想"><a class="markdownIt-Anchor" href="#关键思想"></a> 关键思想</h3><p>用Map高效率查找，减少一重循环。</p><h2 id="最长连续序列"><a class="markdownIt-Anchor" href="#最长连续序列"></a> 最长连续序列</h2><p>从乱序数组中，找到最长连续（数组中不一定连续）的序列。要求<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span>。<br />首先用数组的值存入哈希表，然后遍历数组，判断<code>map.constains(curNum++)</code>。<br />然而，即使这样还是效率不够高。</p><p>优化</p><ol><li>中间值不进入循环，序列开始值才进入，使用<code>!contains(curNum - 1)</code>判断是否为序列开始值</li><li>去重，不要哈希表，不需要键值对，使用哈希Set，只存储值。</li></ol><h3 id="关键思想-2"><a class="markdownIt-Anchor" href="#关键思想-2"></a> 关键思想</h3><p>去重；不处理中间值</p><span id="more"></span><h1 id="stack"><a class="markdownIt-Anchor" href="#stack"></a> Stack</h1><h1 id="单调栈"><a class="markdownIt-Anchor" href="#单调栈"></a> 单调栈</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> num: nums) &#123;</span><br><span class="line">    <span class="comment">// 没找到更大数就呆在栈里；找到更大数的出栈并存入Map</span></span><br><span class="line">    <span class="keyword">while</span> (!stk.isEmpty() &amp;&amp; num &gt; stk.peek()) &#123;</span><br><span class="line">        map.put(stk.peek(), num);</span><br><span class="line">        stk.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    stk.push(num);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="每日温度"><a class="markdownIt-Anchor" href="#每日温度"></a> 每日温度</h3><p>给一个长度为N的每日温度数组，返回一个数组，记录每一天距离下次升温的天数。</p><p>可以用双重循环，找到比当前温度大的那一天，但是这样效率太低。</p><p>优化：<br />使用栈，存取没有找到升温日的index，找到升温日后，一次性处理完，减少一重循环。</p><h4 id="关键思想-3"><a class="markdownIt-Anchor" href="#关键思想-3"></a> 关键思想</h4><p>使用栈存储未处理的值，找到升温日后一次性处理，减少重复动作。</p><h3 id="下一个更大元素-i"><a class="markdownIt-Anchor" href="#下一个更大元素-i"></a> 下一个更大元素 I</h3><p>num1为num2子集，所以只遍历num2，找到num2[i]右边的大数，存入Map；将Map结果去到num1即可。</p><h1 id="栈实现队列"><a class="markdownIt-Anchor" href="#栈实现队列"></a> 栈实现队列</h1><h2 id="关键思想-4"><a class="markdownIt-Anchor" href="#关键思想-4"></a> 关键思想</h2><p>两个栈<code>in</code>和<code>out</code>，只有<code>out</code>为空时，才将<code>in</code>pop到<code>out</code>中。否则会出错。</p><h1 id="list"><a class="markdownIt-Anchor" href="#list"></a> List</h1><h2 id="链表排序"><a class="markdownIt-Anchor" href="#链表排序"></a> 链表排序</h2><p>链表的两种排序方法：插入排序和归并排序。<br />其中，归并排序需要用双指针来找到mid节点。</p><p>注意，链表交换时，不要把<code>temp</code>设置成a或b的引用<code>temp = a/b;</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">exch</span><span class="params">(ListNode a, ListNode b)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> a.val; <span class="comment">// 或构造一个新的ListNode，否则就是在操作引用</span></span><br><span class="line">    a.val = b.val;</span><br><span class="line">    b.val = temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，快指针的写法</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 这样可能访问不到fast.next</span></span><br><span class="line"><span class="keyword">if</span> (fast.next != end) fast = fast.next;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 正确写法</span></span><br><span class="line"><span class="keyword">if</span> (fast != end) fast = fast.next;</span><br></pre></td></tr></table></figure><p>注意，链表的归并排序，不需要一个个赋值</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (head1 != <span class="literal">null</span> &amp;&amp; head2 != <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (head1.val &lt; head2.val) &#123;</span><br><span class="line">        p.next = head1;</span><br><span class="line">        head1 = head1.next;</span><br><span class="line">        </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        p.next = head2;</span><br><span class="line">        head2 = head2.next;</span><br><span class="line">    &#125;</span><br><span class="line">    p = p.next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (head1 != <span class="literal">null</span>) &#123;</span><br><span class="line">    p.next = head1; <span class="comment">// 不需要循环</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (head2 != <span class="literal">null</span>) &#123;</span><br><span class="line">    p.next = head2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，终止条件要熔断有序的链表</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (head.next == end) &#123;</span><br><span class="line">    head.next = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="删除倒数第n个节点"><a class="markdownIt-Anchor" href="#删除倒数第n个节点"></a> 删除倒数第N个节点</h1><p>24.10.11<br />使用双指针，p2比p1快N个节点，遍历，<code>p2 == null</code>时，p1为要删除的节点</p><h1 id="tree"><a class="markdownIt-Anchor" href="#tree"></a> Tree</h1><h2 id="对称树"><a class="markdownIt-Anchor" href="#对称树"></a> 对称树</h2><p>使用递归解决。对称遍历到两棵树的底部(null)，仍然没有出现不相等的情况，即为对称树。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">checkNode</span><span class="params">(TreeNode left, TreeNode right)</span> &#123;</span><br><span class="line">    <span class="comment">// condition</span></span><br><span class="line">    <span class="keyword">return</span> checkNode(left.left, right.right) &amp;&amp;</span><br><span class="line">           checkNode(left.right, right.left);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最大深度"><a class="markdownIt-Anchor" href="#最大深度"></a> 最大深度</h2><p>获得每一个节点的最大深度，root再比较left与right的深度，取最大值即可。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxDepth</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="literal">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> max(maxDepth(root.left), maxDepth(root.right)) + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最长直径"><a class="markdownIt-Anchor" href="#最长直径"></a> 最长直径</h2><p>获取每个节点左右节点的最大深度之和，最大值即为二叉树的最长直径。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> longestDiameter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> <span class="title function_">maxDepthCache</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="literal">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 使用缓存</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">L</span> <span class="operator">=</span> maxDepthCache(root.left);</span><br><span class="line">    <span class="type">int</span> <span class="variable">R</span> <span class="operator">=</span> maxDepthCache(root.right);</span><br><span class="line">    longestDiameter = max(longestDiameter, L + R + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> max(L, R) + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">diameterOfBinaryTree</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">    longestDiameter = <span class="number">1</span>;</span><br><span class="line">    maxDepthCache(root);</span><br><span class="line">    <span class="keyword">return</span> longestDiameter - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="反转二叉树"><a class="markdownIt-Anchor" href="#反转二叉树"></a> 反转二叉树</h1><p>翻转每一个节点。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> TreeNode <span class="title function_">invertTree</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">TreeNode</span> <span class="variable">left</span> <span class="operator">=</span> invertTree(root.left);</span><br><span class="line">    <span class="type">TreeNode</span> <span class="variable">right</span> <span class="operator">=</span> invertTree(root.right);</span><br><span class="line">    root.left = right;</span><br><span class="line">    root.right = left;</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="双指针"><a class="markdownIt-Anchor" href="#双指针"></a> 双指针</h1><h2 id="移动0"><a class="markdownIt-Anchor" href="#移动0"></a> 移动0</h2><p>两个指针，<code>i, j</code>，j左边是排序好的数，i用于遍历。<br />遇到非0的数，交换i与j。</p><h1 id="动态规划dp"><a class="markdownIt-Anchor" href="#动态规划dp"></a> 动态规划，DP</h1><p>动态规划：缓存运算结果，空间换时间。</p><h2 id="不同路径和问题"><a class="markdownIt-Anchor" href="#不同路径和问题"></a> 不同路径和问题</h2><h3 id="爬楼梯"><a class="markdownIt-Anchor" href="#爬楼梯"></a> 爬楼梯</h3><p>Distinct Ways问题。<br />累加所有到达当前状态的可能路径数。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= target; ++i) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; ways.size(); ++j) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ways[j] &lt;= i) &#123;</span><br><span class="line">            dp[i] += dp[i - ways[j]];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="不同路径ii"><a class="markdownIt-Anchor" href="#不同路径ii"></a> 不同路径II</h3><p>增加了Obstacles，不能通过的点。</p><p>题目描述：<br />二维数组，<code>matrix[0][0]</code>为起点；<code>matrix[m-1][n-1]</code>为终点。每次只能向下走或向右走，中间有障碍物，不能通行。求到达终点的不同路径总数。</p><p>核心思想：<br />从起点开始逐步推导走到每一格的路径数量，并将推导结果缓存到数组<code>dp[i][j]</code>中，用于下一步的推导。</p><p>题解：</p><ol><li>首先，创建二维数组<code>dp[m][n]</code>用于存储达到每一格的路径数，初始化第一行和第一列，将可以通行的路径初始化为1，遇到障碍物，将障碍物置0并break中止初始化。</li><li>运用动态规划算法，得出到达每一格的路径数量。</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; m; i += <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= n; j += <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// 只能从上方或左方走过来</span></span><br><span class="line">        dp[i][j] = dp[i - <span class="number">1</span>][j] + dp[i][j - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> dp[m - <span class="number">1</span>][n - <span class="number">1</span>];</span><br></pre></td></tr></table></figure><ol start="3"><li>处理障碍物。遇到障碍物，跳过当前<code>dp[i][j]</code>的赋值操作。（此路不通，到达此格的路径数为默认值0）</li><li>处理边界情况。当起点或终点值为1，即有障碍物不可达时，直接返回0。</li></ol><h2 id="最大最小不同路径问题"><a class="markdownIt-Anchor" href="#最大最小不同路径问题"></a> 最大/最小不同路径问题</h2><p>在不同路径问题的基础上，增加一个max或min函数，筛选达到每一步的最大或最小步数。<br />核心算法：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= target; ++i) &#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; ways.size(); ++j) &#123;</span><br><span class="line">       <span class="keyword">if</span> (ways[j] &lt;= i) &#123;</span><br><span class="line">           dp[i] = min(dp[i], dp[i - ways[j]]) + cost / path / sum;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> dp[target]</span><br></pre></td></tr></table></figure><h3 id="零钱兑换"><a class="markdownIt-Anchor" href="#零钱兑换"></a> 零钱兑换</h3><ol><li>首先初始化dp，并填充最大值；然后对coin的倍数赋正确的值（显然，凑成<code>coin*i</code>元最少需要<code>i</code>个硬币）。为了避免小的硬币倍数覆盖大的硬币倍数，先对<code>coins</code>排序。</li><li>动态规划最小值核心算法</li><li>验证dp是否被修改，没有被修改，说明凑不成，返回-1；否则返回<code>dp[amount]</code></li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;hash&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#hash&quot;&gt;&lt;/a&gt; Hash&lt;/h1&gt;
&lt;h1 id=&quot;字母异位词&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#字母异位词&quot;&gt;&lt;/a&gt; 字母异位词&lt;/h1&gt;
&lt;p&gt;排序每一个单词，就知道是不是异位词。&lt;/p&gt;
&lt;h2 id=&quot;两数之和&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#两数之和&quot;&gt;&lt;/a&gt; 两数之和&lt;/h2&gt;
&lt;p&gt;从数组中，找到&lt;code&gt;nums[i] + nums[j] == target&lt;/code&gt;，并返回&lt;code&gt;&amp;#123; i, j &amp;#125;&lt;/code&gt;。&lt;br /&gt;
思路是双重循环，遍历每一个元素，求和是否为target。&lt;br /&gt;
然而，双重循环需要&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;O(N^2)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.064108em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;O&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.10903em;&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141079999999999em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;的复杂度。因此，可以使用一张表，使用&lt;code&gt;containsKey&lt;/code&gt;方法识别是否存在当前i的&lt;code&gt;target - nums[i]&lt;/code&gt;，即可减少一重循环。&lt;/p&gt;
&lt;h3 id=&quot;关键思想&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#关键思想&quot;&gt;&lt;/a&gt; 关键思想&lt;/h3&gt;
&lt;p&gt;用Map高效率查找，减少一重循环。&lt;/p&gt;
&lt;h2 id=&quot;最长连续序列&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#最长连续序列&quot;&gt;&lt;/a&gt; 最长连续序列&lt;/h2&gt;
&lt;p&gt;从乱序数组中，找到最长连续（数组中不一定连续）的序列。要求&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;O(N)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;O&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.10903em;&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;。&lt;br /&gt;
首先用数组的值存入哈希表，然后遍历数组，判断&lt;code&gt;map.constains(curNum++)&lt;/code&gt;。&lt;br /&gt;
然而，即使这样还是效率不够高。&lt;/p&gt;
&lt;p&gt;优化&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;中间值不进入循环，序列开始值才进入，使用&lt;code&gt;!contains(curNum - 1)&lt;/code&gt;判断是否为序列开始值&lt;/li&gt;
&lt;li&gt;去重，不要哈希表，不需要键值对，使用哈希Set，只存储值。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;关键思想-2&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#关键思想-2&quot;&gt;&lt;/a&gt; 关键思想&lt;/h3&gt;
&lt;p&gt;去重；不处理中间值&lt;/p&gt;</summary>
    
    
    
    
    <category term="笔记" scheme="http://simuleite.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>AI爱外卖</title>
    <link href="http://simuleite.github.io/ComputerScience/%E9%A1%B9%E7%9B%AE/AI%E7%88%B1%E5%A4%96%E5%8D%96/"/>
    <id>http://simuleite.github.io/ComputerScience/%E9%A1%B9%E7%9B%AE/AI%E7%88%B1%E5%A4%96%E5%8D%96/</id>
    <published>2024-09-20T16:00:00.000Z</published>
    <updated>2024-10-09T12:03:43.578Z</updated>
    
    <content type="html"><![CDATA[<h1 id="项目心得"><a class="markdownIt-Anchor" href="#项目心得"></a> 项目心得</h1><h2 id="24109"><a class="markdownIt-Anchor" href="#24109"></a> 24.10.9</h2><p>将AliOss换成本地存储。可是一直插入不成功，使用Swagger调试，甚至数据库什么都接受不到！非常诡异的BUG<br />原来，是导入了错误的RequestBody，导致前端提交的表单怎么都接受不到！</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 导入了错误的包</span></span><br><span class="line"><span class="keyword">import</span> io.swagger.v3.oas.annotations.parameters.RequestBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br></pre></td></tr></table></figure><h1 id="nginx"><a class="markdownIt-Anchor" href="#nginx"></a> Nginx</h1><h2 id="反向代理"><a class="markdownIt-Anchor" href="#反向代理"></a> 反向代理</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        # 反向代理,处理管理端发送的请求</span><br><span class="line">        location /api/ &#123;</span><br><span class="line">            # localhost/api/abc转发到下面admin/abc</span><br><span class="line">            proxy_pass   http://localhost:8080/admin/;</span><br><span class="line">            #proxy_pass   http://webservers/admin/;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好处：</p><ul><li>不会暴露服务器，服务器可以安全放在内网，由nginx转发、缓存。</li></ul><h2 id="负载均衡"><a class="markdownIt-Anchor" href="#负载均衡"></a> 负载均衡</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upstream webservers&#123;</span><br><span class="line">      # 服务器组，按权重分配</span><br><span class="line">      server 127.0.0.1:8080 weight=90 ;</span><br><span class="line">      server 127.0.0.1:8088 weight=10 ;</span><br><span class="line">      # ip_hash 根据ip分配</span><br><span class="line">      # least_conn 分配到最少链接的服务器</span><br><span class="line">      # url_hash 根据url分配</span><br><span class="line">      # fair 分配到响应时间最短的服务器</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        </span><br><span class="line">        # 反向代理,处理管理端发送的请求</span><br><span class="line">        location /api/ &#123;</span><br><span class="line">            # 负载均衡</span><br><span class="line">            proxy_pass   http://webservers/admin/;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="swagger"><a class="markdownIt-Anchor" href="#swagger"></a> Swagger</h1><blockquote><p>Knife4j：Java MVC框架集成Swagger</p></blockquote><p>API接口文档生成、测试</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;项目心得&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#项目心得&quot;&gt;&lt;/a&gt; 项目心得&lt;/h1&gt;
&lt;h2 id=&quot;24109&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#24109&quot;&gt;&lt;/a&gt; 24.10.</summary>
      
    
    
    
    
    <category term="项目" scheme="http://simuleite.github.io/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>DNS Over Https</title>
    <link href="http://simuleite.github.io/ComputerScience/%E7%AC%94%E8%AE%B0/DNS%20Over%20Https/"/>
    <id>http://simuleite.github.io/ComputerScience/%E7%AC%94%E8%AE%B0/DNS%20Over%20Https/</id>
    <published>2024-09-09T16:00:00.000Z</published>
    <updated>2024-09-10T11:25:58.299Z</updated>
    
    <content type="html"><![CDATA[<h1 id="windows"><a class="markdownIt-Anchor" href="#windows"></a> Windows</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">模板</span></span><br><span class="line">netsh dns add encryption server=&lt;IP Address&gt; dohtemplate=&lt;DOH Template&gt; autoupgrade=yes udpfallback=no</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">腾讯</span></span><br><span class="line">netsh dns add encryption server=1.12.12.12 dohtemplate=https://doh.pub/dns-query autoupgrade=yes udpfallback=no</span><br><span class="line"></span><br><span class="line">netsh dns add encryption server=120.53.53.53 dohtemplate=https://doh.360.cn/dns-query autoupgrade=yes udpfallback=no</span><br></pre></td></tr></table></figure><p>查看DoH模板：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">netsh dns show encryption</span></span><br><span class="line"></span><br><span class="line">223.5.5.5 加密设置</span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">DNS-over-HTTPS 模板     : https://dns.alidns.com/dns-query</span><br><span class="line">自动升级                : yes</span><br><span class="line">UDP 回退                : no</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;windows&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#windows&quot;&gt;&lt;/a&gt; Windows&lt;/h1&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;</summary>
      
    
    
    
    
    <category term="笔记" scheme="http://simuleite.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>CS61B sp18</title>
    <link href="http://simuleite.github.io/ComputerScience/%E8%AF%BE%E7%A8%8B/CS61B%20sp18/"/>
    <id>http://simuleite.github.io/ComputerScience/%E8%AF%BE%E7%A8%8B/CS61B%20sp18/</id>
    <published>2024-08-20T16:00:00.000Z</published>
    <updated>2024-09-30T03:01:12.088Z</updated>
    
    <content type="html"><![CDATA[<h1 id="gradescope-autograder"><a class="markdownIt-Anchor" href="#gradescope-autograder"></a> Gradescope Autograder</h1><h2 id="spring-2018"><a class="markdownIt-Anchor" href="#spring-2018"></a> <a href="https://sp18.datastructur.es/">Spring 2018</a></h2><p>44个Assn，偏向数据结构<br />邀请码：<code>MNXYKX</code><br />学校：<code>UC Berkeley</code><br />直接输入，不要选择<code>2U-UC Berkeley</code>，否则将提示<code>COURSE ENTRY CODE IS INVALID</code></p><h2 id="spring-2021"><a class="markdownIt-Anchor" href="#spring-2021"></a> <a href="https://sp21.datastructur.es/">Spring 2021</a></h2><p>19个Assn，偏向软件工程<br />邀请码：<code>MB7ZPY</code></p><h1 id="文章收录"><a class="markdownIt-Anchor" href="#文章收录"></a> 文章收录</h1><p><a href="https://mathwithbaddrawings.com/2015/04/08/the-math-ceiling-wheres-your-cognitive-breaking-point/">The Law of the Broken Futon</a> 浮沙筑高台法则</p><blockquote><p>“Since I’m fine now, can’t I add that missing piece later, when it’s actually needed?” Sometimes, yes. But it’s much harder.<br />Adding the missing piece later means waiting until the damage is already underway, and hellishly difficult to undo.</p></blockquote><p><a href="https://henrikwarne.com/2014/09/04/a-response-to-why-most-unit-testing-is-waste/">A Response to “Why Most Unit Testing is Waste”</a></p><blockquote><p>(Unit Tests) They are based on <em>programmers’ fantasies about how the function should work</em>. But programmers break down requirements into smaller components all the time – this is how you program. Sometimes there are misunderstandings, but that is the exception, not the rule, in my opinion.</p></blockquote><h1 id="21-mystery-of-java-restore"><a class="markdownIt-Anchor" href="#21-mystery-of-java-restore"></a> 2.1 Mystery of Java Restore</h1><blockquote><p>When instantiate an Object, <code>obj = new Object()</code>, <code>obj</code> <strong>stores the address</strong> of the Object, not the specific data struction.</p></blockquote><p>(That is why all type of variables create memory boxes of 64 bits. It is just the memory of the address.)</p><p>Therefore, When we use <code>obj2 = obj</code>, Java simply copy the addr of <code>obj</code> and assign it to <code>obj2</code> (They are pointing to the same Object), that is why when we change <code>obj2.weight</code> it effects <code>obj.weight</code> too.</p><span id="more"></span><h1 id="22-sllist"><a class="markdownIt-Anchor" href="#22-sllist"></a> 2.2 SLList</h1><h2 id="static"><a class="markdownIt-Anchor" href="#static"></a> Static</h2><blockquote><p>if you don’t use any instance members of the outer class, make the nested class static.</p></blockquote><h2 id="overloaded"><a class="markdownIt-Anchor" href="#overloaded"></a> Overloaded</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Share the same name but have different parameters.</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">size</span><span class="params">(IntNode p)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (p.next == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> + size(p.next);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">size</span><span class="params">()</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> size(first);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="sentinel-node"><a class="markdownIt-Anchor" href="#sentinel-node"></a> Sentinel Node</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">SLList</span><span class="params">()</span> &#123;</span><br><span class="line">    first = <span class="literal">null</span>;</span><br><span class="line">    size = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addLast</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (size == <span class="number">0</span>) &#123;</span><br><span class="line">        addFirst(x);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// This solution works, but special case code like that shown above should be avoided when necessary.</span></span><br><span class="line">    <span class="type">IntNode</span> <span class="variable">p</span> <span class="operator">=</span> first;</span><br><span class="line">    <span class="keyword">while</span> (p.next != <span class="literal">null</span>) &#123;</span><br><span class="line">        p = p.next;</span><br><span class="line">    &#125;</span><br><span class="line">    p.next = <span class="keyword">new</span> <span class="title class_">IntNode</span>(x, <span class="literal">null</span>);</span><br><span class="line">    size++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>We can do this by creating a special node that is always there, which we will call a <strong>sentinel node</strong>. The sentinel node will hold a value, which we won’t care about.</p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addLast</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="type">IntNode</span> <span class="variable">p</span> <span class="operator">=</span> sentinel;</span><br><span class="line">    <span class="keyword">while</span> (p.next != <span class="literal">null</span>) &#123;</span><br><span class="line">        p = p.next;</span><br><span class="line">    &#125;</span><br><span class="line">    p.next = <span class="keyword">new</span> <span class="title class_">IntNode</span>(x, <span class="literal">null</span>);</span><br><span class="line">    size++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="30-testing"><a class="markdownIt-Anchor" href="#30-testing"></a> 3.0 Testing</h1><h2 id="the-operator"><a class="markdownIt-Anchor" href="#the-operator"></a> The <code>==</code> operator</h2><blockquote><p><code>==</code> operator simply compares the literal bits in the memory boxes. (e.g., for objects it only compares their address.)</p></blockquote><h2 id="private-recursive-helper"><a class="markdownIt-Anchor" href="#private-recursive-helper"></a> Private Recursive Helper</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** Sorts strings destructively starting from item start. */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">sort</span><span class="params">(String[] x, <span class="type">int</span> start)</span> &#123; </span><br><span class="line">   <span class="type">int</span> <span class="variable">smallestIndex</span> <span class="operator">=</span> findSmallest(x);</span><br><span class="line">   swap(x, start, smallestIndex);</span><br><span class="line">   sort(x, start + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Sorts strings destructively. */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">sort</span><span class="params">(String[] x)</span> &#123; </span><br><span class="line">   sort(x, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>This approach is quite common when trying to use recursion on a data structure that is not inherently recursive, e.g. arrays.</p></blockquote><h2 id="junit"><a class="markdownIt-Anchor" href="#junit"></a> JUnit</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// your test code</span></span><br><span class="line">    assertEquals(actual, expected);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="autograder-vs-junit"><a class="markdownIt-Anchor" href="#autograder-vs-junit"></a> Autograder vs JUnit</h2><p>Rely on an Autograder, there is plenty of time that you’re not in control of neither your workflow or your code.</p><h2 id="test-driven-development-tdd"><a class="markdownIt-Anchor" href="#test-driven-development-tdd"></a> Test-Driven Development (TDD)</h2><p>TDD is a development process in which we write tests for code before writing the code itself. The steps are as follows:</p><ol><li>Identify a new feature.</li><li>Write a unit test for that feature.</li><li>Run the test. It should fail.</li><li>Write code that passes the test. Yay!</li><li>Optional: refactor code to make it faster, cleaner, etc. Except now we have a reference to tests that should pass.</li></ol><blockquote><p>You should <strong>definitely write tests but only when they might be useful!</strong></p></blockquote><h1 id="41-overload"><a class="markdownIt-Anchor" href="#41-overload"></a> 4.1 Overload</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">longest</span><span class="params">(SLList&lt;String&gt; list)</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">longest</span><span class="params">(AList&lt;String&gt; list)</span>;</span><br></pre></td></tr></table></figure><p>Java will choose the right method according to the parameter you pass in.</p><blockquote><p>However, it is ugly, repetitive and hard to maintain.</p></blockquote><h2 id="override"><a class="markdownIt-Anchor" href="#override"></a> @Override</h2><blockquote><p>Override is something like a proofreader. It will remind you when you make a typo and named method in error.</p></blockquote><h1 id="42-interface"><a class="markdownIt-Anchor" href="#42-interface"></a> 4.2 Interface</h1><p>Summary:</p><ul><li>All methods must be public.</li><li>All variables must be public static final.</li><li>Cannot be instantiated</li><li>All methods are by default abstract unless specified to be <code>default</code></li><li>Can implement more than one interface per class</li></ul><h2 id="default"><a class="markdownIt-Anchor" href="#default"></a> Default</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Use `default` to define a method in `interface`</span></span><br><span class="line"><span class="keyword">default</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// your code</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="extends"><a class="markdownIt-Anchor" href="#extends"></a> Extends</h2><blockquote><p>The <code>extends</code> keyword defines “is-a”.</p></blockquote><blockquote><p>By using the <code>extends</code> keyword, subclasses inherit all <strong>members</strong> of the parent class. “Members” includes:</p></blockquote><ol><li>All instance and static variables</li><li>All methods</li><li>All nested classes</li></ol><blockquote><p>Note that constructors are not inherited, and private members cannot be directly accessed by subclasses.</p></blockquote><h3 id="subclass-constructor"><a class="markdownIt-Anchor" href="#subclass-constructor"></a> Subclass Constructor</h3><p>A subclass is firstly its parentclass. Using the <code>super</code> keyword.</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">VengefulSLList</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>();</span><br><span class="line">    deletedItems = <span class="keyword">new</span> <span class="title class_">SLList</span>&lt;Item&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Or, if we choose not to, Java will automatically make a call to the superclass’s <em>no-argument</em> constructor for us.</p><h2 id="compile-time-error"><a class="markdownIt-Anchor" href="#compile-time-error"></a> Compile-time Error</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">VengefulSLList&lt;Integer&gt; vsl = <span class="keyword">new</span> <span class="title class_">VengefulSLList</span>&lt;Integer&gt;(<span class="number">9</span>);</span><br><span class="line">SLList&lt;Integer&gt; sl = vsl;</span><br><span class="line"></span><br><span class="line">sl.addLast(<span class="number">50</span>);</span><br><span class="line">sl.removeLast();</span><br><span class="line"></span><br><span class="line">sl.printLostItems(); <span class="comment">// 会出错</span></span><br><span class="line">VengefulSLList&lt;Integer&gt; vsl2 = sl; <span class="comment">// 会出错</span></span><br></pre></td></tr></table></figure><p>尽管运行时sl是动态的<code>VengefulSLList</code>类型，Java编译器将对象看作静态类型；<code>SLList</code>没有<code>printLostItems</code>方法，因此会报错；最后一句也是一样。</p><h1 id="43-polymorphism"><a class="markdownIt-Anchor" href="#43-polymorphism"></a> 4.3 Polymorphism</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OurComparable</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compareTo</span><span class="params">(Object o)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> OurComparable <span class="title function_">max</span><span class="params">(OurComparable[] items)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">maxDex</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; items.length; i += <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">cmp</span> <span class="operator">=</span> items[i].compareTo(items[maxDex]);</span><br><span class="line">            <span class="keyword">if</span> (cmp &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                maxDex = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> items[maxDex];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Dog</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compareTo</span><span class="params">(Object o)</span> &#123;</span><br><span class="line">        <span class="type">Dog</span> <span class="variable">uddaDog</span> <span class="operator">=</span> (Dog) o;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.size - uddaDog.size;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用多态，就可以写出一个统一的max()方法，而不需要考虑各个类的数据结构</p><h1 id="final"><a class="markdownIt-Anchor" href="#final"></a> Final</h1><blockquote><p>The <code>final</code> keyword prevents the variable from being changed after its first assignment.</p></blockquote><p>Notice: it doesn’t work for reference!</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> ArrayDeque&lt;String&gt;() deque = <span class="keyword">new</span> <span class="title class_">ArrayDeque</span>&lt;String&gt;();</span><br></pre></td></tr></table></figure><p>deque不可改变，然而deque指向的ArrayDeque可变</p><h1 id="specific-generic-types"><a class="markdownIt-Anchor" href="#specific-generic-types"></a> Specific Generic Types</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;K <span class="keyword">extends</span> <span class="title class_">Comparable</span>&lt;K&gt;, V&gt; K <span class="title function_">maxKey</span><span class="params">(Map61B&lt;K, V&gt; map)</span> &#123;...&#125;</span><br></pre></td></tr></table></figure><blockquote><p>The <code>K extends Comparable&lt;K&gt;</code> means keys must implement the comparable interface and can be compared to other K’s.</p></blockquote><h1 id="arrayset"><a class="markdownIt-Anchor" href="#arrayset"></a> ArraySet</h1><blockquote><p>注意Set的add()方法需要检查是否已包含元素。</p></blockquote><h1 id="iterator"><a class="markdownIt-Anchor" href="#iterator"></a> Iterator</h1><p>For code on the right to work:</p><ol><li>Compiler checks that Lists have a method called iterator() that returns an  Iterator&lt;Integer&gt;.</li><li>Then, compiler checks that Iterators have:<ul><li>hasNext()</li><li>next()</li></ul></li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArraySet</span>&lt;T&gt; <span class="keyword">implements</span> <span class="title class_">Iterable</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Iterator&lt;T&gt; <span class="title function_">iterator</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ArraySetIterator</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">class</span> <span class="title class_">ArraySetIterator</span> <span class="keyword">implements</span> <span class="title class_">Iterator</span>&lt;T&gt; &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> wizPos;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">ArraySetIterator</span><span class="params">()</span> &#123;</span><br><span class="line">            wizPos = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasNext</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> wizPos &lt; size;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> T <span class="title function_">next</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">T</span> <span class="variable">returnItem</span> <span class="operator">=</span> items[wizPos];</span><br><span class="line">            wizPos += <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">return</span> returnItem;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="the-philosophy-of-exceptions"><a class="markdownIt-Anchor" href="#the-philosophy-of-exceptions"></a> The Philosophy of Exceptions</h1><blockquote><p>Exceptions keep error handling separate from the rest of the program.</p></blockquote><p>Program without exceptions:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (theFileIsOpen) &#123;</span><br><span class="line">    determine its size;</span><br><span class="line">    <span class="keyword">if</span> (gotTheFileLength) &#123;</span><br><span class="line">        allocate that much memory;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> error(<span class="string">&quot;fileLengthError&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>Program with exceptions:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    open the file;</span><br><span class="line">    determine its size;</span><br><span class="line">    allocate that much memory;</span><br><span class="line">    read the file into memory;</span><br><span class="line">    close the file;</span><br><span class="line">&#125; <span class="keyword">catch</span> (fileOpenFailed) &#123;</span><br><span class="line">    doSomething;</span><br></pre></td></tr></table></figure><h1 id="exceptions-catch-and-specify"><a class="markdownIt-Anchor" href="#exceptions-catch-and-specify"></a> Exceptions: Catch and Specify</h1><blockquote><p><strong>Catch</strong> the error when you can handle the problem there. Keep it from escaping!</p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        gulgate();</span><br><span class="line">    &#125; <span class="keyword">catch</span>(IOException e) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Averted!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>Specify</strong> the error when someone else should handle the error. Make sure the caller knows the method is dangerous!</p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    gulgate();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h1><blockquote><p>If an implementing class fails to implement any abstract methods inherited from an interface, then that class must be declared abstract.</p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">AbstractBoundedQueue</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* the method must be defined with the abstract keyword </span></span><br><span class="line"><span class="comment">     * and without an implementation (without braces, and </span></span><br><span class="line"><span class="comment">     * followed by a semicolon) </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">     <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">moveTo</span><span class="params">(<span class="type">double</span> deltaX, <span class="type">double</span> deltaY)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="package"><a class="markdownIt-Anchor" href="#package"></a> Package</h1><blockquote><p>It is very possible that with all the code in this world, you would create classes that share names with those from a different project.</p></blockquote><blockquote><p>the <strong>package</strong> — a namespace that organizes classes and interfaces.<br />naming convention: package name starts with the website address, backwards.</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">com.joshh.animal // joshh.com</span><br></pre></td></tr></table></figure><h1 id="jar"><a class="markdownIt-Anchor" href="#jar"></a> JAR</h1><blockquote><p>JAR files are just like zip files.<br />JAR files do not keep your code safe, and thus you should not share your .jar files of your projects with other students.</p></blockquote><h1 id="access-control"><a class="markdownIt-Anchor" href="#access-control"></a> Access Control</h1><ul><li><code>private</code>: Only the given class can access. Subclass cannot.</li><li><code>package private</code>: Only the class from the same package can access.</li><li><code>protected</code>: the same package or subclass can access.</li></ul><h1 id="encapsulation"><a class="markdownIt-Anchor" href="#encapsulation"></a> Encapsulation</h1><blockquote><p>A module is said to be encapsulated if its implementation is completely hidden, and it can be accessed only through a documented interface.</p></blockquote><h1 id="delegation"><a class="markdownIt-Anchor" href="#delegation"></a> Delegation</h1><blockquote><p>Extension tends to be used when you know what is going on in the parent class.</p></blockquote><blockquote><p>Delegation is when you do not want to consider your current class to be a version of the class that you are pulling the method from.</p></blockquote><h1 id="assn"><a class="markdownIt-Anchor" href="#assn"></a> Assn</h1><h2 id="proj0"><a class="markdownIt-Anchor" href="#proj0"></a> Proj0</h2><blockquote><p>[!NOTE]<br />注意严格按照讲义要求编程，不要有讲义以外的函数或方法，否则Gradescope OJ会扣掉API的10分！</p></blockquote><p>计算<code>ForceExertedByX/Y</code>，不要使用<code>Math.abs()</code>或者<code>a &lt; 0 ? -a : a</code>来通过本地测试，否则OJ会报错。力的方向（正负）需要根据行星的相对位置来定。</p><h2 id="proj1"><a class="markdownIt-Anchor" href="#proj1"></a> Proj1</h2><ul><li>注意构造空的Deque时，确保哨兵正确指向自己。</li><li>add()需要更改4个指针的方向。修改指针指向时，注意备份原指针指向位置。</li><li>对于循环Deque，注意print()的迭代条件。</li><li>remove()方法需要检查isEmpty()，否则不应该执行。</li><li>get()方法，index从0开始，LinkedList和ArrayList的对应关系是一样的。</li></ul><h3 id="array-deque"><a class="markdownIt-Anchor" href="#array-deque"></a> Array Deque</h3><ul><li>先设计，再编码。好好想想要设计怎样的ArrayDeque。分离传入index和实际index。</li><li>取模！！！一定要注意<code>-1 % size = -1</code>是取余数，<code>Math.floorMod(-1, size) = size-1</code>才是取模！（当Gradescope出现index=-1一般就是取模问题）</li><li><code>addFirst()</code>后调用<code>removeLast()</code>时，size变回0，但是没有调整下标的话head和end不会连在一起（错误状态）</li><li>考虑<code>resize()</code>的实现方法。浮点数运算比整数运算慢很多！</li></ul><h2 id="proj2"><a class="markdownIt-Anchor" href="#proj2"></a> Proj2</h2><p>思路：在房间旁边画房间，并在房间重合边缘处打洞，实现迷宫。</p><ol><li>首先设计<code>Room.java</code>，内置画一个房间，在房间旁边生成房间的方法。<br />稀里糊涂地生成了不错的迷宫出来。但是不好打洞！</li></ol><h1 id="hw2"><a class="markdownIt-Anchor" href="#hw2"></a> HW2</h1><p>蒙特卡罗渗透实验。原理是使用集合连接打通的节点，检查是否从top到bottom都连通了，连通了即渗透成功。<br />因此使用集合UF时，可以生成N*N+2个节点，作为top节点和bottom节点。但是这样做会导致倒灌(backwash)，可以创建两个UF，一个有bottom，另一个没有。一个用于检查是否渗透，另一个用于检查isFull。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;gradescope-autograder&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#gradescope-autograder&quot;&gt;&lt;/a&gt; Gradescope Autograder&lt;/h1&gt;
&lt;h2 id=&quot;spring-2018&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#spring-2018&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://sp18.datastructur.es/&quot;&gt;Spring 2018&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;44个Assn，偏向数据结构&lt;br /&gt;
邀请码：&lt;code&gt;MNXYKX&lt;/code&gt;&lt;br /&gt;
学校：&lt;code&gt;UC Berkeley&lt;/code&gt;&lt;br /&gt;
直接输入，不要选择&lt;code&gt;2U-UC Berkeley&lt;/code&gt;，否则将提示&lt;code&gt;COURSE ENTRY CODE IS INVALID&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;spring-2021&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#spring-2021&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://sp21.datastructur.es/&quot;&gt;Spring 2021&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;19个Assn，偏向软件工程&lt;br /&gt;
邀请码：&lt;code&gt;MB7ZPY&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;文章收录&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#文章收录&quot;&gt;&lt;/a&gt; 文章收录&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://mathwithbaddrawings.com/2015/04/08/the-math-ceiling-wheres-your-cognitive-breaking-point/&quot;&gt;The Law of the Broken Futon&lt;/a&gt; 浮沙筑高台法则&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Since I’m fine now, can’t I add that missing piece later, when it’s actually needed?” Sometimes, yes. But it’s much harder.&lt;br /&gt;
Adding the missing piece later means waiting until the damage is already underway, and hellishly difficult to undo.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://henrikwarne.com/2014/09/04/a-response-to-why-most-unit-testing-is-waste/&quot;&gt;A Response to “Why Most Unit Testing is Waste”&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(Unit Tests) They are based on &lt;em&gt;programmers’ fantasies about how the function should work&lt;/em&gt;. But programmers break down requirements into smaller components all the time – this is how you program. Sometimes there are misunderstandings, but that is the exception, not the rule, in my opinion.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;21-mystery-of-java-restore&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#21-mystery-of-java-restore&quot;&gt;&lt;/a&gt; 2.1 Mystery of Java Restore&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;When instantiate an Object, &lt;code&gt;obj = new Object()&lt;/code&gt;, &lt;code&gt;obj&lt;/code&gt; &lt;strong&gt;stores the address&lt;/strong&gt; of the Object, not the specific data struction.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(That is why all type of variables create memory boxes of 64 bits. It is just the memory of the address.)&lt;/p&gt;
&lt;p&gt;Therefore, When we use &lt;code&gt;obj2 = obj&lt;/code&gt;, Java simply copy the addr of &lt;code&gt;obj&lt;/code&gt; and assign it to &lt;code&gt;obj2&lt;/code&gt; (They are pointing to the same Object), that is why when we change &lt;code&gt;obj2.weight&lt;/code&gt; it effects &lt;code&gt;obj.weight&lt;/code&gt; too.&lt;/p&gt;</summary>
    
    
    
    
    <category term="课程" scheme="http://simuleite.github.io/tags/%E8%AF%BE%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Listary使用</title>
    <link href="http://simuleite.github.io/ComputerScience/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/Listary%E4%BD%BF%E7%94%A8/"/>
    <id>http://simuleite.github.io/ComputerScience/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/Listary%E4%BD%BF%E7%94%A8/</id>
    <published>2024-08-15T16:00:00.000Z</published>
    <updated>2024-08-16T12:08:33.871Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网络搜索"><a class="markdownIt-Anchor" href="#网络搜索"></a> 网络搜索</h1><table><thead><tr><th>网站</th><th>URL</th><th>备注</th></tr></thead><tbody><tr><td>哔哩哔哩</td><td><a href="https://search.bilibili.com/all?keyword=%7Bquery%7D">https://search.bilibili.com/all?keyword={query}</a></td><td></td></tr><tr><td>知乎</td><td><a href="https://www.zhihu.com/search?type=content&amp;q=%7Bquery%7D">https://www.zhihu.com/search?type=content&amp;q={query}</a></td><td></td></tr><tr><td>百度贴吧</td><td><a href="https://tieba.baidu.com/f?ie=utf-8&amp;kw=%7Bquery%7D&amp;fr=search">https://tieba.baidu.com/f?ie=utf-8&amp;kw={query}&amp;fr=search</a></td><td>优先搜索吧名</td></tr><tr><td>小红书</td><td><a href="https://www.xiaohongshu.com/search_result?keyword=%7Bquery%7D&amp;source=web_search_result_notes">https://www.xiaohongshu.com/search_result?keyword={query}&amp;source=web_search_result_notes</a></td><td>需要登录</td></tr><tr><td>淘宝</td><td><a href="https://s.taobao.com/search?q=%7Bquery%7D&amp;commend=all&amp;search_type=item&amp;sourceId=tb.index&amp;ie=utf8">https://s.taobao.com/search?q={query}&amp;commend=all&amp;search_type=item&amp;sourceId=tb.index&amp;ie=utf8</a></td><td></td></tr><tr><td>京东</td><td><a href="https://search.jd.com/Search?keyword=%7Bquery%7D&amp;enc=utf-8">https://search.jd.com/Search?keyword={query}&amp;enc=utf-8</a></td><td></td></tr><tr><td>Yandex</td><td><a href="https://yandex.com/search/?text=%7Bquery%7D">https://yandex.com/search/?text={query}</a></td><td></td></tr><tr><td>GitHub</td><td><a href="https://github.com/search?q=%7Bquery%7D&amp;type=repositories">https://github.com/search?q={query}&amp;type=repositories</a></td><td></td></tr><tr><td>tldr</td><td><a href="https://tldr.inbrowser.app/pages/common/%7Bquery%7D">https://tldr.inbrowser.app/pages/common/{query}</a></td><td>mannual查Linux命令</td></tr><tr><td>必应翻译</td><td><a href="https://cn.bing.com/translator?ref=TThis&amp;text=%7Bquery%7D&amp;from=en&amp;to=zh-Hant">https://cn.bing.com/translator?ref=TThis&amp;text={query}&amp;from=en&amp;to=zh-Hant</a></td><td>英译中</td></tr><tr><td>DeepL翻译</td><td><a href="https://www.deepl.com/translator#en/zh/%7Bquery%7D">https://www.deepl.com/translator#en/zh/{query}</a></td><td>英译中</td></tr></tbody></table><ul><li>有时候站内搜索没有搜索引擎准确，可以使用搜索引擎过滤网站<br />过滤站点：</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://&lt;ENGINE.URL&gt;/search?text=site%3A&lt;SITE.URL&gt;%20&#123;query&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网络搜索&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#网络搜索&quot;&gt;&lt;/a&gt; 网络搜索&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;网站&lt;/th&gt;
&lt;th&gt;URL&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/the</summary>
      
    
    
    
    
    <category term="基本操作" scheme="http://simuleite.github.io/tags/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>Spring Framework</title>
    <link href="http://simuleite.github.io/ComputerScience/%E7%AC%94%E8%AE%B0/Spring%20Framework/"/>
    <id>http://simuleite.github.io/ComputerScience/%E7%AC%94%E8%AE%B0/Spring%20Framework/</id>
    <published>2024-08-10T16:00:00.000Z</published>
    <updated>2024-11-08T02:20:22.454Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>所有的Java云平台都能够使用基于JAR的打包方式，WAR文件只在一些云平台上能够运行。</p></blockquote><h1 id="pomxml-更换-maven-源"><a class="markdownIt-Anchor" href="#pomxml-更换-maven-源"></a> Pom.xml 更换 Maven 源</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.quoters<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quoters-incorporated<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>quoters-incorporated<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>REST service to support the guides<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">developers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">developer</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>gturnquist<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Greg Turnquist<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">email</span>&gt;</span>gturnquist at vmware.com<span class="tag">&lt;/<span class="name">email</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">organization</span>&gt;</span>VMware, Inc.<span class="tag">&lt;/<span class="name">organization</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">roles</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">role</span>&gt;</span>Project Lead<span class="tag">&lt;/<span class="name">role</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">roles</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">developer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">developers</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">organization</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>VMware, Inc.<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://spring.io<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">organization</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">licenses</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">license</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Apache License, Version 2.0<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://www.apache.org/licenses/LICENSE-2.0<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">comments</span>&gt;</span></span><br><span class="line">                Copyright 2011 the original author or authors.</span><br><span class="line"></span><br><span class="line">                Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span><br><span class="line">                you may not use this file except in compliance with the License.</span><br><span class="line">                You may obtain a copy of the License at</span><br><span class="line"></span><br><span class="line">                https://www.apache.org/licenses/LICENSE-2.0</span><br><span class="line"></span><br><span class="line">                Unless required by applicable law or agreed to in writing, software</span><br><span class="line">                distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="line">                WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or</span><br><span class="line">                implied.</span><br><span class="line">                See the License for the specific language governing permissions and</span><br><span class="line">                limitations under the License.</span><br><span class="line">            <span class="tag">&lt;/<span class="name">comments</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">license</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">licenses</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.h2database<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>h2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置阿里云仓库 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun-repos<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun-repos<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="tight-coupling-紧耦合"><a class="markdownIt-Anchor" href="#tight-coupling-紧耦合"></a> Tight Coupling 紧耦合</h1><p>在Spring框架以前，使用排序算法需要将算法实例化</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ComplexBusinessService</span> &#123;</span><br><span class="line">  <span class="type">SortAlgorithm</span> <span class="variable">sortAlgorithm</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BubbleSortAlgorithm</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BubbleSortAlgorithm</span> <span class="keyword">implements</span> <span class="title class_">SortAlgorithm</span> &#123;...&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Good code has loose coupling.</p></blockquote><p>移除依赖项的实例化可以移除紧耦合</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ComplexBusinessService</span> &#123;</span><br><span class="line">  SortAlgorithm sortAlgorithm; <span class="comment">// = new BubbleSortAlgorithm();</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">ComplexBusinessService</span><span class="params">(SortAlgorithm sortAlgorithm)</span> &#123; <span class="comment">// 创建构造函数</span></span><br><span class="line">      <span class="built_in">this</span>.sortAlgorithm = sortAlgorithm;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> classBubbleSortAlgorithm <span class="keyword">implements</span> <span class="title class_">SortAlgorithm</span> &#123;...&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Spring Framework instantiates objects and populates the dependencies.</p></blockquote><span id="more"></span><h1 id="component"><a class="markdownIt-Anchor" href="#component"></a> @Component</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span> <span class="comment">// 告诉Spring管理这两个类的实例</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ComplexBusinessService</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Autowired</span> <span class="comment">// 告诉Spring这是依赖项</span></span><br><span class="line">  SortAlgorithm sortAlgorithm;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BubbleSortAlgorithm</span> <span class="keyword">implements</span> <span class="title class_">SortAlgorithm</span> &#123;...&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Spring的工作：</span></span><br><span class="line"><span class="type">SortAlgorithm</span> <span class="variable">sortAlgorithm</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BubbleSortAlgorithm</span>();</span><br><span class="line"><span class="type">ComplexBusinessService</span> <span class="variable">businessService</span> <span class="operator">=</span></span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">ComplexBusinessService</span>(sortAlgorithm);</span><br></pre></td></tr></table></figure><h1 id="dependency-injection"><a class="markdownIt-Anchor" href="#dependency-injection"></a> Dependency Injection</h1><p>Spring理解你放在类顶部的不同注释，它确保它管理的所有对象的实例都是使用正确填充的依赖项创建的。</p><h1 id="术语"><a class="markdownIt-Anchor" href="#术语"></a> 术语</h1><ul><li>Beans：Spring管理的不同对象</li><li>Autowiring：Spring识别依赖关系、它的匹配项并填充的过程。</li><li>Dependency Injection：将算法作为依赖项注入到复杂业务中。</li><li>Inversion Of Control：从需要依赖关系的类中获取Control，并将框架控制权交给Spring</li><li>IOC Container</li><li>Application Context：创建和管理所有Bean的上下文。典型的IOC容器。</li></ul><h1 id="beans"><a class="markdownIt-Anchor" href="#beans"></a> Beans</h1><ul><li>What are the beans? <code>@Component</code></li><li>What are the dependencies of a bean? <code>@Autowired</code></li><li>Where to search for beans? <code>SpringApplication</code><br />Features:</li><li>Singleton: One instance per Spring Context</li><li>Prototype: New bean whenever requested <code>@Scope(&quot;prototype&quot;)/ @Scope(ConfigurableBeanFactory.SCOPE_PROTOTYPE)</code></li><li>request: One bean per HTTP request</li><li>session: One bean per HTTP session</li></ul><h1 id="primary"><a class="markdownIt-Anchor" href="#primary"></a> @Primary</h1><blockquote><p>If you have two components on the class path of the same type then use @Primary.</p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// It also decides which Algo to use.</span></span><br><span class="line"><span class="keyword">private</span> SortAlgorithm bubbleSortAlgorithm;</span><br><span class="line"><span class="comment">// However, if quickSortAlgorithm is marked as @Primary, then @Primary has higher priority.</span></span><br></pre></td></tr></table></figure><h1 id="qualifier"><a class="markdownIt-Anchor" href="#qualifier"></a> @Qualifier</h1><blockquote><p>Use @Qualifier(“name”) to name and choose the algo you want to use.</p></blockquote><p>However, use name is much clearer than use @Qualifier. @Qualifier is more likely a rename tool.</p><h1 id="constructorsetter-injection"><a class="markdownIt-Anchor" href="#constructorsetter-injection"></a> Constructor/Setter Injection</h1><blockquote><p>All mandatory(necessary) dependencies should be autowired using Constructor Injection. Other(Optional) was recommended to use Setter Injection.</p></blockquote><h1 id="modularity-of-spring"><a class="markdownIt-Anchor" href="#modularity-of-spring"></a> Modularity of Spring</h1><blockquote><p>One of the important things about Spring is that it’s not one big framework. Spring is built in a very modular way. It enables you to use specific models.</p></blockquote><h1 id="why-spring-popular"><a class="markdownIt-Anchor" href="#why-spring-popular"></a> Why Spring popular</h1><ol><li>With porperly usage of Dependency Injection, we are able to write test unit easily.</li><li>No plumbing(not core) code. 在内部写好了许多Exceptions，使用Spring的程序员几乎不需要自己写Exception Handling。</li><li>Modularity.(Flexible to other framework)</li><li>Stay up with the trends. like Spring Cloud.</li></ol><h1 id="eclipse-skill"><a class="markdownIt-Anchor" href="#eclipse-skill"></a> Eclipse Skill</h1><p><code>&lt;Ctrl+Space&gt;</code> Auto Completion<br /><code>&lt;Ctrl+1&gt;</code> File Operation<br /><code>&lt;C-S-L&gt;</code> List Shortcuts<br /><code>&lt;C-S-R&gt;</code> Resource Finding<br /><code>&lt;C-S-T&gt;</code> Type Finding<br /><code>F3</code> Goto Declaration<br /><code>F4</code> Type Hierarchy<br /><code>&lt;A-S-S&gt;</code> Code Generation</p><h1 id="maven"><a class="markdownIt-Anchor" href="#maven"></a> Maven</h1><p>Convention over Configuration<br /><code>mvn compile</code>: Compile source files<br /><code>mvn test compile</code>mvn clean<code>: Delete target directory</code>mvn test<code>: Run unit tests</code>mvn package<code>: Create a jar</code>mvn help:effective-pom<code></code>mvn dependency:tree`</p><h1 id="gradle"><a class="markdownIt-Anchor" href="#gradle"></a> Gradle</h1><p>Cross-platform: C/C++, JavaScript, Python…<br />Completely Programmable<br />Deliver Faster(Cache)</p><h1 id="dao-data-accessed-object"><a class="markdownIt-Anchor" href="#dao-data-accessed-object"></a> DAO: Data Accessed Object</h1><h1 id="servlet"><a class="markdownIt-Anchor" href="#servlet"></a> Servlet</h1><blockquote><p>A very simple Java class which can take request in, and can take respond back with a  response.</p></blockquote><ol><li>extends javax.servlet.http.HttpServlet</li><li>@WebServlet(urlPatterns = “/login.do”)</li><li>doGet(HttpServletRequest request, HttpServletResponse response) throws IOException</li></ol><h1 id="实践"><a class="markdownIt-Anchor" href="#实践"></a> 实践</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet(urlPatterns = &quot;/login.do&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, </span></span><br><span class="line"><span class="params">            HttpServletResponse response)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        request.getRequestDispatcher(<span class="string">&quot;/webapp/your/path/to/login.jsp&quot;</span>).forward(request, response);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- /pom.xml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.in28minutes<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>in28Minutes-first-webapp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javaee-web-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">verbose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">verbose</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">showWarnings</span>&gt;</span>true<span class="tag">&lt;/<span class="name">showWarnings</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">contextReloadable</span>&gt;</span>true<span class="tag">&lt;/<span class="name">contextReloadable</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- webapp/WEB-INF/web.xml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">version</span>=<span class="string">&quot;3.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>To do List<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>login.do<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span> <span class="comment">&lt;!-- 首页默认后缀名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动服务</span></span><br><span class="line">mvn tomcat7:run</span><br></pre></td></tr></table></figure><h2 id="passing-parameters"><a class="markdownIt-Anchor" href="#passing-parameters"></a> Passing Parameters</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://your.site?parameter=value&amp;param2=value</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">param</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;parameter&quot;</span>);</span><br><span class="line">request.setAttribute(<span class="string">&quot;parameter&quot;</span>, param);</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">  Hello, $&#123;param&#125;! &lt;!-- Expression Language --&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="scriptlet-java-code-in-jsp"><a class="markdownIt-Anchor" href="#scriptlet-java-code-in-jsp"></a> Scriptlet: Java Code in JSP</h2><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">java.util.<span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">java</span>.util.Date();</span><br><span class="line">%&gt;</span><br><span class="line">&lt;div&gt;Current date is &lt;%=date%&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><blockquote><p>JSP is a view. It should only show Information. There shouldn’t have any business logic.</p></blockquote><h2 id="disadvantage-of-get"><a class="markdownIt-Anchor" href="#disadvantage-of-get"></a> Disadvantage of GET</h2><blockquote><p>Any router can see the URL. Never use GET to pass your password. It’s unsecure and it is the reason why there is POST.</p></blockquote><h2 id="post"><a class="markdownIt-Anchor" href="#post"></a> POST</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/login.do&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">  Enter your name </span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> /&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Login&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">UserValidationService</span> <span class="variable">service</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserValidationService</span>();</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request,</span></span><br><span class="line"><span class="params">          HttpServletResponse response)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">      </span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isUserValid</span> <span class="operator">=</span> service.isUserValid(name, password);</span><br><span class="line">      </span><br><span class="line">        <span class="keyword">if</span> (isUserValid) &#123;</span><br><span class="line">            request.setAttribute(<span class="string">&quot;name&quot;</span>, name);</span><br><span class="line">            request.setAttribute(<span class="string">&quot;password&quot;</span>, password);</span><br><span class="line">            request.getRequestDispatcher(<span class="string">&quot;/WEB-INF/views/welcome.jsp&quot;</span>).forward(request, response);  </span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            request.setAttribute(<span class="string">&quot;errMsg&quot;</span>, <span class="string">&quot;Invalid Credentials!&quot;</span>);</span><br><span class="line">            request.getRequestDispatcher(<span class="string">&quot;WEB-INF/views/login.jsp&quot;</span>).forward(request, response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserValidationService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isUserValid</span><span class="params">(String user, String password)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (user.equals(<span class="string">&quot;account&quot;</span>) &amp;&amp; password.equals(<span class="string">&quot;password&quot;</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="spring-mvc"><a class="markdownIt-Anchor" href="#spring-mvc"></a> Spring MVC</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="controller"><a class="markdownIt-Anchor" href="#controller"></a> Controller</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginController</span> &#123;</span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/login&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">sayHello</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="model"><a class="markdownIt-Anchor" href="#model"></a> Model</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/login&quot;, method = RequestMethod.POST)</span> <span class="comment">// Only handle POST</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">handleLoginRequest</span><span class="params">(<span class="meta">@RequestParam</span> String name,</span></span><br><span class="line"><span class="params">  <span class="meta">@RequestParam</span> String password, ModelMap model)</span> &#123;</span><br><span class="line">    model.put(<span class="string">&quot;name&quot;</span>, name);</span><br><span class="line">    model.put(<span class="string">&quot;password&quot;</span>, password); <span class="comment">// request.setAttribute(&quot;password&quot;, password);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;welcome&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;所有的Java云平台都能够使用基于JAR的打包方式，WAR文件只在一些云平台上能够运行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;pomxml-更换-maven-源&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#pomxml-更换-maven-源&quot;&gt;&lt;/a&gt; Pom.xml 更换 Maven 源&lt;/h1&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?xml version=&lt;span class=&quot;string&quot;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; encoding=&lt;span class=&quot;string&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;project&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;xmlns&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;http://maven.apache.org/POM/4.0.0&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;xmlns:xsi&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;xsi:schemaLocation&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;modelVersion&lt;/span&gt;&amp;gt;&lt;/span&gt;4.0.0&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;modelVersion&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.quoters&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;quoters-incorporated&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;0.0.1-SNAPSHOT&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;packaging&lt;/span&gt;&amp;gt;&lt;/span&gt;jar&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;packaging&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;quoters-incorporated&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;description&lt;/span&gt;&amp;gt;&lt;/span&gt;REST service to support the guides&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;description&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;developers&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;developer&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;gturnquist&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;Greg Turnquist&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;email&lt;/span&gt;&amp;gt;&lt;/span&gt;gturnquist at vmware.com&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;email&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;organization&lt;/span&gt;&amp;gt;&lt;/span&gt;VMware, Inc.&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;organization&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;roles&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;role&lt;/span&gt;&amp;gt;&lt;/span&gt;Project Lead&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;role&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;roles&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;developer&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;developers&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;organization&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;VMware, Inc.&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;url&lt;/span&gt;&amp;gt;&lt;/span&gt;https://spring.io&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;url&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;organization&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;licenses&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;license&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;Apache License, Version 2.0&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;url&lt;/span&gt;&amp;gt;&lt;/span&gt;https://www.apache.org/licenses/LICENSE-2.0&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;url&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;comments&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Copyright 2011 the original author or authors.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Licensed under the Apache License, Version 2.0 (the &amp;quot;License&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                you may not use this file except in compliance with the License.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                You may obtain a copy of the License at&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                https://www.apache.org/licenses/LICENSE-2.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Unless required by applicable law or agreed to in writing, software&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                distributed under the License is distributed on an &amp;quot;AS IS&amp;quot; BASIS,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                implied.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                See the License for the specific language governing permissions and&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                limitations under the License.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;comments&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;license&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;licenses&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;parent&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-parent&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.7.5&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;relativePath&lt;/span&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- lookup parent from repository --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;parent&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;properties&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;project.build.sourceEncoding&lt;/span&gt;&amp;gt;&lt;/span&gt;UTF-8&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;project.build.sourceEncoding&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;project.reporting.outputEncoding&lt;/span&gt;&amp;gt;&lt;/span&gt;UTF-8&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;project.reporting.outputEncoding&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;java.version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.8&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;java.version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;properties&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-data-jpa&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-web&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.h2database&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;h2&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;runtime&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-test&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;test&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 配置阿里云仓库 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;repositories&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;repository&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;aliyun-repos&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;url&lt;/span&gt;&amp;gt;&lt;/span&gt;https://maven.aliyun.com/repository/public&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;url&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;releases&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;enabled&lt;/span&gt;&amp;gt;&lt;/span&gt;true&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;enabled&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;releases&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;snapshots&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;enabled&lt;/span&gt;&amp;gt;&lt;/span&gt;false&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;enabled&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;snapshots&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;repository&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;repositories&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;pluginRepositories&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;pluginRepository&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;aliyun-repos&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;url&lt;/span&gt;&amp;gt;&lt;/span&gt;https://maven.aliyun.com/repository/public&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;url&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;releases&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;enabled&lt;/span&gt;&amp;gt;&lt;/span&gt;true&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;enabled&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;releases&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;snapshots&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;enabled&lt;/span&gt;&amp;gt;&lt;/span&gt;false&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;enabled&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;snapshots&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;pluginRepository&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;pluginRepositories&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;build&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;plugins&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-maven-plugin&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;plugins&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;build&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;project&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;tight-coupling-紧耦合&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#tight-coupling-紧耦合&quot;&gt;&lt;/a&gt; Tight Coupling 紧耦合&lt;/h1&gt;
&lt;p&gt;在Spring框架以前，使用排序算法需要将算法实例化&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;ComplexBusinessService&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;type&quot;&gt;SortAlgorithm&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;sortAlgorithm&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;BubbleSortAlgorithm&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;BubbleSortAlgorithm&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;SortAlgorithm&lt;/span&gt; &amp;#123;...&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Good code has loose coupling.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;移除依赖项的实例化可以移除紧耦合&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;ComplexBusinessService&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  SortAlgorithm sortAlgorithm; &lt;span class=&quot;comment&quot;&gt;// = new BubbleSortAlgorithm();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title function_&quot;&gt;ComplexBusinessService&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(SortAlgorithm sortAlgorithm)&lt;/span&gt; &amp;#123; &lt;span class=&quot;comment&quot;&gt;// 创建构造函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.sortAlgorithm = sortAlgorithm;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; classBubbleSortAlgorithm &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;SortAlgorithm&lt;/span&gt; &amp;#123;...&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Spring Framework instantiates objects and populates the dependencies.&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="笔记" scheme="http://simuleite.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>OS 操作系统</title>
    <link href="http://simuleite.github.io/ComputerScience/%E8%AF%BE%E7%A8%8B/OS%20%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    <id>http://simuleite.github.io/ComputerScience/%E8%AF%BE%E7%A8%8B/OS%20%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</id>
    <published>2024-08-06T16:00:00.000Z</published>
    <updated>2024-10-06T08:24:22.296Z</updated>
    
    <content type="html"><![CDATA[<h1 id="chapter3-操作系统结构"><a class="markdownIt-Anchor" href="#chapter3-操作系统结构"></a> Chapter3 操作系统结构</h1><h2 id="复杂度管理方法-malh"><a class="markdownIt-Anchor" href="#复杂度管理方法-malh"></a> 复杂度管理方法 M.A.L.H</h2><p>Modularity: 模块化，分而治之<br />Abstraction: 抽象，接口与实现分离，遵循宽进严出原则。例如虚拟内存、文件系统</p><blockquote><p>对于大型系统，只有模块化和抽象，可能导致划分模块太多，交互关系复杂，因此还需要引入分层和层次结构控制复杂度。</p></blockquote><p>Layering: 分层，每个层级是一套完整机制。通常一个模块只能与本层和上下层交互，不能跨层。例如OSI、TCP/IP<br />Hierarchy: 层次结构，大的子系统由多个小的子系统组织成。即同级模块的分层</p><blockquote><p>宽进严出原则：容忍各种输入（包括恶意输入），严格控制模块的对外输出</p></blockquote><h2 id="微内核"><a class="markdownIt-Anchor" href="#微内核"></a> 微内核</h2><p>宏内核架构：单点bug使整个系统崩溃。<br />微内核：解耦单个功能/模块（如文件系统、设备驱动）作为独立服务隔离运行，使内核成为一个最小功能集。</p><blockquote><p>微内核架构服务隔离，单点出问题系统不会崩溃</p></blockquote><blockquote><p>内核态部分，称为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>μ</mi><mi>k</mi><mi>e</mi><mi>r</mi><mi>n</mi><mi>e</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">\mu kernel</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">μ</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span></p></blockquote><p>微内核优势：</p><ol><li>弹性硬件拓展能力</li><li>硬件异构实现</li><li>功能安全</li><li>信息安全</li><li>时延确定</li></ol><blockquote><p>现代操作系统特征：1）虚拟内存；2）用户态、内核态隔离。</p></blockquote><span id="more"></span><h3 id="抽象的缺点"><a class="markdownIt-Anchor" href="#抽象的缺点"></a> 抽象的缺点</h3><ol><li>过度抽象会损失性能（原则：abstract but don’t hide power)</li><li>通用的抽象对数据库、Web服务器来说不是最优抽象。（软件比操作系统更了解如何使用抽象来使用硬件资源）</li></ol><h2 id="外核-exokernel"><a class="markdownIt-Anchor" href="#外核-exokernel"></a> 外核 Exokernel</h2><p>外核将硬件资源抽象为LibOS，按需最小化调用</p><blockquote><p>外核的缺点：LibOS针对应用定制，不通用、复用差（增大内存开销）</p></blockquote><blockquote><p>开源的缺点：开放设备驱动源码会透露实现细节</p></blockquote><h2 id="策略与机制"><a class="markdownIt-Anchor" href="#策略与机制"></a> 策略与机制</h2><blockquote><p>重要的操作系统设计原则：分离 policy 与 mechanism</p></blockquote><p>policy：做什么。就像房子。例如什么用户、什么权限<br />mechanism：怎么做。就像盖房子的砖块。例如输入处理、桌面加载</p><h1 id="chapter4-内存管理"><a class="markdownIt-Anchor" href="#chapter4-内存管理"></a> Chapter4 内存管理</h1><h2 id="虚拟内存"><a class="markdownIt-Anchor" href="#虚拟内存"></a> 虚拟内存</h2><p>两种内存管理</p><ol><li>一个程序占用全部内存。程序切换时，将内存的数据写入硬盘（写入慢）</li><li>程序共享内存。无需频繁写入硬盘（问题：隔离性、地址不连续）<br />方法2更好，于是催生了虚拟内存这个中间层来解决隔离性和地址不连续的问题。</li></ol><blockquote><p>有了虚拟内存技术，程序连续地存储在硬盘里，通过页表映射的方式高效使用内存。</p></blockquote><h2 id="内存分段与分页"><a class="markdownIt-Anchor" href="#内存分段与分页"></a> 内存分段与分页</h2><p>分段：早期内存划分成大小不一样的段。缺点是容易产生内存碎片，不能充分利用内存资源。<br />分页：按规格划分内存和硬盘，任意虚拟页可以被映射到物理页。</p><h2 id="多级页表"><a class="markdownIt-Anchor" href="#多级页表"></a> 多级页表</h2><p>如果每个程序只维护1张页表，那么每张页表的大小将会是3千万GB！</p><blockquote><p>单级页表每一项都要存在：因为整个页表必须连续，没有用到的页也预留着。</p></blockquote><h2 id="tlb-translation-buffer"><a class="markdownIt-Anchor" href="#tlb-translation-buffer"></a> TLB Translation Buffer</h2><p>TLB缓存了虚拟页与物理页的映射关系。<br />其中，每项TLB有一个标签（ASID/PCID）来区别不同的程序，切换程序时只需要刷新那个程序的页表，无需全部刷新。</p><blockquote><p>页表切换时，操作系统需要主动刷新TLB。</p></blockquote><h2 id="换页与缺页"><a class="markdownIt-Anchor" href="#换页与缺页"></a> 换页与缺页</h2><p>打开PS，占用2G内存；打开游戏，占用3G内存。一共占用5G内存，却可以在总共4G的电脑上运行。</p><blockquote><p>换页：物理内存容量不够，将物理页写入磁盘，并回收资源。</p></blockquote><blockquote><p>缺页异常：内存找不到页，从磁盘找到对应页，写入内存。</p></blockquote><blockquote><p>预取：预测即将被访问的页，提前换入内存，减少不命中。</p></blockquote><blockquote><p>按需页分配：程序申请内存，只标记不换入，等到缺页异常再换入，提高利用率。</p></blockquote><h2 id="工作集模型"><a class="markdownIt-Anchor" href="#工作集模型"></a> 工作集模型</h2><p>将程序使用的内存页集合共同保持在物理页中，避免颠簸，优先换出非工作集的物理页。<br />原理：时钟算法。通过定时比较当前内存页与上次检测结果的访问位，判断出哪些内存是当前工作集。</p><h2 id="写时拷贝"><a class="markdownIt-Anchor" href="#写时拷贝"></a> 写时拷贝</h2><p>对于两个程序共用的物理页，只在内存保留1份数据，只读地映射到页表。当其中一个程序对共享部分修改时，再拷贝一份可读写的数据（由异常处理完成操作）来完成修改。</p><h2 id="内存去重"><a class="markdownIt-Anchor" href="#内存去重"></a> 内存去重</h2><p>操作系统定期扫描内存中的相同内容，只保留其中一份。缺点是修改时需要写时拷贝，加大了时延。</p><blockquote><p>针对内存去重的攻击：伪造数据，如果被去重了（表现为时延变长）就说明内存中存在相同的数据。</p></blockquote><h2 id="大页"><a class="markdownIt-Anchor" href="#大页"></a> 大页</h2><blockquote><p>TLB中翻译每个内存页要占用1个TLB缓存项。使用大页来解决缓存不够用的问题，提高命中率。大页的大小可以是2MB到1GB（普通页仅为4KB）。</p></blockquote><h2 id="物理内存分配与管理"><a class="markdownIt-Anchor" href="#物理内存分配与管理"></a> 物理内存分配与管理</h2><blockquote><p>内存碎片：无法被利用的内存。</p></blockquote><blockquote><p>外部碎片：有足够的内存却不是连续的，无法被分配使用。解决方法是按规格切分并分配内存。</p></blockquote><blockquote><p>内部碎片：切分并分配内存后（解决外部碎片），每块内存都没有被充分使用。</p></blockquote><h3 id="伙伴系统"><a class="markdownIt-Anchor" href="#伙伴系统"></a> 伙伴系统</h3><p>物理内存分块，每块由<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>个（1，2，4，8）物理页构成。2块相同大小的块为<strong>伙伴</strong>，可以合并成大一号的块；大块也可以分裂出2个小一号的伙伴块。</p><blockquote><p>伙伴系统：一个块被释放后，<strong>自动寻找伙伴块向上合并</strong>成大块，直到没有伙伴块为止。</p></blockquote><h3 id="slab分配器"><a class="markdownIt-Anchor" href="#slab分配器"></a> SLAB分配器</h3><p>伙伴系统最小分配4KB，然而许多服务只需要几十、几百B，SLAB用于分配这些小内存。<br />SLAB后来被改进成SLUB；还有一个最小开销、用于嵌入式的SLOB，这三者共称“SLAB分配器”。</p><blockquote><p>SLUB：2^n Byte(3\leq n \textless 12) 的伙伴系统。有2个指针，partial指向一块空闲内存slab，current指向slab中的空闲块。</p></blockquote><h3 id="软件着色软件方案"><a class="markdownIt-Anchor" href="#软件着色软件方案"></a> 软件着色（软件方案）</h3><blockquote><p>对放到不同位置的物理页标记不同颜色。对于连续虚拟内存，优先分别到不同颜色的位置，避免不命中。</p></blockquote><h1 id="chapter5-进程与线程"><a class="markdownIt-Anchor" href="#chapter5-进程与线程"></a> Chapter5 进程与线程</h1><blockquote><p>进程：每个进程对应一个运行中的程序。</p></blockquote><p>有了进程的抽象，应用程序再运行时仿佛独占了整个CPU。</p><blockquote><p>上下文切换：通过保存/回复进程的运行状态（上下文），使进程可以暂停、切换、恢复，实现CPU资源共享。</p></blockquote><blockquote><p>操作系统为每个进程提供独立虚拟地址空间（页表）。</p></blockquote><blockquote><p>线程：更轻量的执行单元，解决进程间数据不易共享、通信开销问题。</p></blockquote><blockquote><p>纤程：允许上下文在用户态而非内核态切换，再次减小开销。</p></blockquote><h2 id="进程"><a class="markdownIt-Anchor" href="#进程"></a> 进程</h2><table><thead><tr><th>名称</th><th>状态</th></tr></thead><tbody><tr><td>new</td><td>进程被创建，未初始化，不能调度</td></tr><tr><td>ready</td><td>进程初始化完成，未被调度器选择</td></tr><tr><td>running</td><td>进程被调度器选择，在CPU上运行</td></tr><tr><td>blocked</td><td>进程需要等待外部事件，暂时无法被调度</td></tr><tr><td>terminated</td><td>进程完成执行，不会再被调度</td></tr></tbody></table><h3 id="进程内存空间布局"><a class="markdownIt-Anchor" href="#进程内存空间布局"></a> 进程内存空间布局</h3><table><thead><tr><th>内核</th><th>最顶端</th></tr></thead><tbody><tr><td>用户栈</td><td>自顶向下拓展</td></tr><tr><td>代码库</td><td>共享，只读</td></tr><tr><td>用户堆</td><td>自底向上拓展</td></tr><tr><td>数据、代码段</td><td>静态</td></tr></tbody></table><p><code>cat /proc/PID/maps</code> 可以查看某个进程的空间布局</p><h3 id="进程控制块与上下文切换"><a class="markdownIt-Anchor" href="#进程控制块与上下文切换"></a> 进程控制块与上下文切换</h3><p>进程通过一个数据结构来保存它的相关状态（PID、进程状态、VM状态、打开的文件…）。</p><blockquote><p>这个数据结构称为PCB（Process Control Block）</p></blockquote><blockquote><p>上下文切换：将前一个进程的寄存器状态保存到PCB，将下一个进程之前保存的状态写入寄存器。</p></blockquote><h2 id="fork"><a class="markdownIt-Anchor" href="#fork"></a> fork</h2><p>fork创建一个与父进程一样子进程（PID与VM不同）。</p><h1 id="chapter6-操作系统调度"><a class="markdownIt-Anchor" href="#chapter6-操作系统调度"></a> Chapter6 操作系统调度</h1><h2 id="调度策略"><a class="markdownIt-Anchor" href="#调度策略"></a> 调度策略</h2><ul><li><p>FCFS，First Come First Served<br />先到先服务。用时短的服务需要等待，用户体验不好。</p></li><li><p>SFJ， Shortest Job First<br />最短运行时间先服务。依赖到达时间，如果长时间任务先到，仍然是长时间任务占用系统。</p></li><li><p>STCF，Shortest Time-to Completion First<br />最短剩余时间先服务。容易饿死长时间服务。</p></li><li><p>RR，Round Robin<br />时间片循环服务。平均把时间放在所有任务上。</p></li><li><p>MLQ，Multi-Level Queue<br />多级队列，高优先级的队列执行完后，才执行低优先级队列。同级别的队列，随机选择。同样，低优先级会饿死。而且一个任务锁定内存时，高优先级实质上执行不了。</p></li><li><p>MLFQ，Multi-Level Feedback Queue<br />多级队列加上反馈。假设所有任务是短时间任务，优先执行，超过一定时间后降级，处理其他事务。定时刷新，重设任务为高优先级，防止饿死。</p></li></ul><p>上面的所有调度方案，都是单用户下的调度；对多用户的调度和分配，我们需要引入<strong>份额</strong>。</p><ul><li><p>彩票调度<br />生成随机数，例如生成32，则份额为10的不会执行，份额为20-40的会执行。<br />这个方法显然不是完全按概率调度的。</p></li><li><p>彩票货币<br />A任务份额10，B任务份额5。在实际执行过程中，B可能会锁死A需要的内存，这时就需要A转让份额，让B快点执行完。<br />通过在份额上，再增加一层抽象货币，即A分配1/3的份额给B时，转换成A给B100货币，更容易计算。</p></li><li><p>步幅调度<br />步幅调度设置虚拟时间T，严格按照1：3的分配执行两个任务。</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;chapter3-操作系统结构&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#chapter3-操作系统结构&quot;&gt;&lt;/a&gt; Chapter3 操作系统结构&lt;/h1&gt;
&lt;h2 id=&quot;复杂度管理方法-malh&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#复杂度管理方法-malh&quot;&gt;&lt;/a&gt; 复杂度管理方法 M.A.L.H&lt;/h2&gt;
&lt;p&gt;Modularity: 模块化，分而治之&lt;br /&gt;
Abstraction: 抽象，接口与实现分离，遵循宽进严出原则。例如虚拟内存、文件系统&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于大型系统，只有模块化和抽象，可能导致划分模块太多，交互关系复杂，因此还需要引入分层和层次结构控制复杂度。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Layering: 分层，每个层级是一套完整机制。通常一个模块只能与本层和上下层交互，不能跨层。例如OSI、TCP/IP&lt;br /&gt;
Hierarchy: 层次结构，大的子系统由多个小的子系统组织成。即同级模块的分层&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;宽进严出原则：容忍各种输入（包括恶意输入），严格控制模块的对外输出&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;微内核&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#微内核&quot;&gt;&lt;/a&gt; 微内核&lt;/h2&gt;
&lt;p&gt;宏内核架构：单点bug使整个系统崩溃。&lt;br /&gt;
微内核：解耦单个功能/模块（如文件系统、设备驱动）作为独立服务隔离运行，使内核成为一个最小功能集。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;微内核架构服务隔离，单点出问题系统不会崩溃&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;内核态部分，称为&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;μ&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;&#92;mu kernel&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8888799999999999em;vertical-align:-0.19444em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;μ&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;微内核优势：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;弹性硬件拓展能力&lt;/li&gt;
&lt;li&gt;硬件异构实现&lt;/li&gt;
&lt;li&gt;功能安全&lt;/li&gt;
&lt;li&gt;信息安全&lt;/li&gt;
&lt;li&gt;时延确定&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;现代操作系统特征：1）虚拟内存；2）用户态、内核态隔离。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="课程" scheme="http://simuleite.github.io/tags/%E8%AF%BE%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>mysql使用</title>
    <link href="http://simuleite.github.io/ComputerScience/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/mysql%E4%BD%BF%E7%94%A8/"/>
    <id>http://simuleite.github.io/ComputerScience/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/mysql%E4%BD%BF%E7%94%A8/</id>
    <published>2024-07-26T16:00:00.000Z</published>
    <updated>2024-10-10T11:55:08.178Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h1><h2 id="启动数据库"><a class="markdownIt-Anchor" href="#启动数据库"></a> 启动数据库</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 需要管理员权限</span></span><br><span class="line">net start &lt;mysql-service_name&gt;</span><br></pre></td></tr></table></figure><h1 id="登录数据库"><a class="markdownIt-Anchor" href="#登录数据库"></a> 登录数据库</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -u &lt;username&gt; -p</span><br><span class="line">$ &lt;password&gt;</span><br></pre></td></tr></table></figure><h2 id="导入数据库"><a class="markdownIt-Anchor" href="#导入数据库"></a> 导入数据库</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 设置中文字符集</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SET</span> NAMES <span class="string">&#x27;utf8mb4&#x27;</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SET</span> character_set_server <span class="operator">=</span> <span class="string">&#x27;utf8mb4&#x27;</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> SOURCE <span class="operator">/</span>path<span class="operator">/</span><span class="keyword">to</span><span class="operator">/</span>database.sql;</span><br></pre></td></tr></table></figure><h2 id="数据库"><a class="markdownIt-Anchor" href="#数据库"></a> 数据库</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 创建数据库</span></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE yourDatabase</span><br><span class="line">  <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看所有数据库</span></span><br><span class="line"><span class="keyword">show</span> databases;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 进入数据库</span></span><br><span class="line">use yourDatabase</span><br></pre></td></tr></table></figure><h2 id="表"><a class="markdownIt-Anchor" href="#表"></a> 表</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 建表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> yourTable (</span><br><span class="line">  id   <span class="type">INT</span>         AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">  name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>       <span class="keyword">DEFAULT</span> <span class="string">&#x27;worker&#x27;</span>,</span><br><span class="line">  age  <span class="type">INT</span>         ,</span><br><span class="line">  addr <span class="type">varchar</span>(<span class="number">50</span>) </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除表</span></span><br><span class="line"><span class="keyword">drop</span> <span class="operator">&lt;</span><span class="keyword">table</span><span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看表 </span></span><br><span class="line"><span class="keyword">show</span> tables;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改表</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="operator">&lt;</span><span class="keyword">table</span><span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">add</span> <span class="operator">&lt;</span>col<span class="operator">&gt;</span> <span class="type">char</span>(<span class="number">20</span>)</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">column</span> <span class="operator">&lt;</span>col<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除整张表</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="operator">&lt;</span><span class="keyword">table</span><span class="operator">&gt;</span>;</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="查询"><a class="markdownIt-Anchor" href="#查询"></a> 查询</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- \G 参数单独展示每一行，避免过宽</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="operator">&lt;</span><span class="keyword">table</span><span class="operator">&gt;</span>\G</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询多列</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">&lt;</span>column1<span class="operator">&gt;</span>, <span class="operator">&lt;</span>column2<span class="operator">&gt;</span>, <span class="operator">&lt;</span>column3<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">from</span> <span class="operator">&lt;</span><span class="keyword">table</span><span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 只显示不同项</span></span><br><span class="line"><span class="comment">-- 注意，对多列使用时，两列完全一样才会被屏蔽</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> <span class="operator">&lt;</span><span class="keyword">column</span><span class="operator">&gt;</span> <span class="keyword">from</span> <span class="operator">&lt;</span><span class="keyword">table</span><span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 检错前5行</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">&lt;</span>col<span class="operator">&gt;</span> <span class="keyword">from</span> <span class="operator">&lt;</span><span class="keyword">table</span><span class="operator">&gt;</span> limit <span class="number">5</span>;</span><br></pre></td></tr></table></figure><h1 id="排序"><a class="markdownIt-Anchor" href="#排序"></a> 排序</h1><blockquote><p><code>ORDER BY</code> 需要放在 <code>WHERE</code> 之后</p></blockquote><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 按列升序排序</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">&lt;</span>col<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">from</span> <span class="operator">&lt;</span><span class="keyword">table</span><span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="operator">&lt;</span>col<span class="operator">&gt;</span> (<span class="keyword">asc</span>); <span class="comment">-- 默认Ascending</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 降序排序。对多列排序，每列都要跟desc</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">&lt;</span>col<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">from</span> <span class="operator">&lt;</span><span class="keyword">table</span><span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="operator">&lt;</span>col1<span class="operator">&gt;</span> <span class="keyword">desc</span>, <span class="operator">&lt;</span>col2<span class="operator">&gt;</span> <span class="keyword">desc</span>; <span class="comment">-- Descending降序排序</span></span><br></pre></td></tr></table></figure><h1 id="筛选"><a class="markdownIt-Anchor" href="#筛选"></a> 筛选</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 筛选col = value的字段</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">&lt;</span>col<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">from</span> <span class="operator">&lt;</span><span class="keyword">table</span><span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">where</span> <span class="operator">&lt;</span>col<span class="operator">&gt;</span> <span class="operator">=</span> <span class="operator">&lt;</span><span class="keyword">value</span><span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 筛选between 0 and 10的字段</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">&lt;</span>col<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">from</span> <span class="operator">&lt;</span><span class="keyword">table</span><span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">where</span> <span class="operator">&lt;</span>col<span class="operator">&gt;</span> <span class="keyword">between</span> <span class="number">0</span> <span class="keyword">and</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 筛选col为空的字段</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">&lt;</span>col<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">from</span> <span class="operator">&lt;</span><span class="keyword">table</span><span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">where</span> <span class="operator">&lt;</span>col<span class="operator">&gt;</span> <span class="keyword">is</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><h1 id="逻辑操作符"><a class="markdownIt-Anchor" href="#逻辑操作符"></a> 逻辑操作符</h1><blockquote><p>优先级： <code>AND</code> &gt; <code>OR</code></p></blockquote><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- AND, OR</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">&lt;</span>col<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">from</span> <span class="operator">&lt;</span><span class="keyword">table</span><span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">where</span> <span class="operator">&lt;</span>cond1<span class="operator">&gt;</span> <span class="keyword">or</span> (<span class="operator">&lt;</span>cond2<span class="operator">&gt;</span> <span class="keyword">and</span> <span class="operator">&lt;</span>cond3<span class="operator">&gt;</span>); <span class="comment">-- 不加括号，结果会改变</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- IN, NOT</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">&lt;</span>col<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">from</span> <span class="operator">&lt;</span><span class="keyword">table</span><span class="operator">&gt;</span></span><br><span class="line"><span class="comment">-- 相当于OR，性能稍好一点，也更直观；NOT主要配合IN使用</span></span><br><span class="line"><span class="keyword">where</span> <span class="operator">&lt;</span>col<span class="operator">&gt;</span> <span class="keyword">not</span> <span class="keyword">in</span> (<span class="operator">&lt;</span>value1<span class="operator">&gt;</span>, <span class="operator">&lt;</span>value2<span class="operator">&gt;</span>); </span><br></pre></td></tr></table></figure><h1 id="插入"><a class="markdownIt-Anchor" href="#插入"></a> 插入</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 插入相应字段的值</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="operator">&lt;</span><span class="keyword">table</span><span class="operator">&gt;</span>(<span class="operator">&lt;</span>col1<span class="operator">&gt;</span>,</span><br><span class="line">                    <span class="operator">&lt;</span>col2<span class="operator">&gt;</span>)</span><br><span class="line"><span class="keyword">values</span>(<span class="operator">&lt;</span>val1<span class="operator">&gt;</span>,</span><br><span class="line">       <span class="operator">&lt;</span>val2<span class="operator">&gt;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> yourTable (name, email, age) <span class="keyword">values</span> (<span class="string">&#x27;eric&#x27;</span>, <span class="string">&#x27;example@email.com&#x27;</span>, <span class="number">19</span>);</span><br></pre></td></tr></table></figure><h1 id="更新"><a class="markdownIt-Anchor" href="#更新"></a> 更新</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> <span class="operator">&lt;</span><span class="keyword">table</span><span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">set</span> <span class="operator">&lt;</span>col1<span class="operator">&gt;</span> <span class="operator">=</span> <span class="operator">&lt;</span>val1<span class="operator">&gt;</span>,</span><br><span class="line">    <span class="operator">&lt;</span>col2<span class="operator">&gt;</span> <span class="operator">=</span> <span class="operator">&lt;</span>val2<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">where</span> <span class="operator">&lt;</span>col3<span class="operator">&gt;</span> <span class="operator">=</span> <span class="operator">&lt;</span>val3<span class="operator">&gt;</span>;</span><br></pre></td></tr></table></figure><h1 id="删除"><a class="markdownIt-Anchor" href="#删除"></a> 删除</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> <span class="operator">&lt;</span><span class="keyword">table</span><span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">where</span> <span class="operator">&lt;</span>col<span class="operator">&gt;</span> <span class="operator">=</span> <span class="operator">&lt;</span>val<span class="operator">&gt;</span>;</span><br></pre></td></tr></table></figure><h1 id="联结"><a class="markdownIt-Anchor" href="#联结"></a> 联结</h1><p><img src="../Source/Photo/SQL%20JOIN.jpg" alt="" /></p><p>设计数据库时，应遵循将数据分解到不同的数据表这一原则。<br />然而，在使用数据时，常常需要将多个表的数据一起检索出来。<br />这时就需要用到联结。</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 使用WHERE联结</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">&lt;</span>col1<span class="operator">&gt;</span>, <span class="operator">&lt;</span>col2<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">from</span> <span class="operator">&lt;</span>table1<span class="operator">&gt;</span>, <span class="operator">&lt;</span>table2<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">where</span> <span class="operator">&lt;</span>table1<span class="operator">&gt;</span>.<span class="operator">&lt;</span>col<span class="operator">&gt;</span> <span class="operator">=</span> <span class="operator">&lt;</span>table2<span class="operator">&gt;</span>.<span class="operator">&lt;</span>col<span class="operator">&gt;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用ON联结</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">&lt;</span>col1<span class="operator">&gt;</span>, <span class="operator">&lt;</span>col2<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">from</span> <span class="operator">&lt;</span>table1<span class="operator">&gt;</span> <span class="keyword">inner</span> <span class="keyword">join</span> <span class="operator">&lt;</span>table2<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">on</span> <span class="operator">&lt;</span>table1<span class="operator">&gt;</span>.<span class="operator">&lt;</span>col<span class="operator">&gt;</span> <span class="operator">=</span> <span class="operator">&lt;</span>table2<span class="operator">&gt;</span>.<span class="operator">&lt;</span>col<span class="operator">&gt;</span>;</span><br></pre></td></tr></table></figure><hr /><h1 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h1><h2 id="压缩包安装"><a class="markdownIt-Anchor" href="#压缩包安装"></a> 压缩包安装</h2><ol><li>初始化</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化，生成data文件夹，console参数可以看见密码</span></span><br><span class="line">mysqld --initialize --console &gt; mysql_info</span><br><span class="line"><span class="comment"># &gt; mysql_info把命令行输出结果存到文件里，防止密码丢失</span></span><br></pre></td></tr></table></figure><ol start="2"><li>配置<code>mysql.ini</code></li></ol><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置3306端口</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3306</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置mysql目录路径</span></span><br><span class="line"><span class="attr">basedir</span>=C:\\your\\path\\MySQL</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置mysql数据库的数据的存放目录</span></span><br><span class="line"><span class="attr">datadir</span>=C:\\your\\path\\MySQL\\Data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许最大连接数</span></span><br><span class="line"><span class="attr">max_connections</span>=<span class="number">200</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许连接失败的次数。这是为了防止有人从该主机试图攻击数据库系统</span></span><br><span class="line"><span class="attr">max_connect_errors</span>=<span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务端使用的字符集默认为UTF8</span></span><br><span class="line"><span class="attr">character-set-server</span>=utf8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建新表时将使用的默认存储引擎</span></span><br><span class="line"><span class="attr">default-storage-engine</span>=INNODB</span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认使用“mysql_native_password”插件认证</span></span><br><span class="line"><span class="attr">default_authentication_plugin</span>=mysql_native_password</span><br><span class="line"></span><br><span class="line"><span class="section">[mysql]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置mysql客户端默认字符集</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置mysql客户端连接服务端时默认使用的端口</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3306</span></span><br><span class="line"></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br></pre></td></tr></table></figure><ol start="3"><li>安装服务</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysqld --install MySQL8 --defaults-file=<span class="string">&quot;C:\your\path\MySQL\mysql.ini&quot;</span> <span class="comment"># 设置服务名</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认安装</span></span><br><span class="line">mysqld install</span><br></pre></td></tr></table></figure><ol start="4"><li>修改密码</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置YourPassword为新密码，再输入旧密码确认修改即可</span></span><br><span class="line">mysqladmin -u root -p password (YourPassword) --port 3306</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;使用&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#使用&quot;&gt;&lt;/a&gt; 使用&lt;/h1&gt;
&lt;h2 id=&quot;启动数据库&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#启动数据库&quot;&gt;&lt;/a&gt; 启动数据库&lt;/h2&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 需要管理员权限&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;net start &amp;lt;mysql-service_name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;登录数据库&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#登录数据库&quot;&gt;&lt;/a&gt; 登录数据库&lt;/h1&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql -u &amp;lt;username&amp;gt; -p&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &amp;lt;password&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;导入数据库&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#导入数据库&quot;&gt;&lt;/a&gt; 导入数据库&lt;/h2&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- 设置中文字符集&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&lt;span class=&quot;operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;SET&lt;/span&gt; NAMES &lt;span class=&quot;string&quot;&gt;&amp;#x27;utf8mb4&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&lt;span class=&quot;operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;SET&lt;/span&gt; character_set_server &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;utf8mb4&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&lt;span class=&quot;operator&quot;&gt;&amp;gt;&lt;/span&gt; SOURCE &lt;span class=&quot;operator&quot;&gt;/&lt;/span&gt;path&lt;span class=&quot;operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;/&lt;/span&gt;database.sql;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;数据库&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数据库&quot;&gt;&lt;/a&gt; 数据库&lt;/h2&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- 创建数据库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; DATABASE yourDatabase&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;type&quot;&gt;CHARACTER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;SET&lt;/span&gt; utf8mb4;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- 查看所有数据库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;show&lt;/span&gt; databases;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- 进入数据库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;use yourDatabase&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;表&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#表&quot;&gt;&lt;/a&gt; 表&lt;/h2&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- 建表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; yourTable (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  id   &lt;span class=&quot;type&quot;&gt;INT&lt;/span&gt;         AUTO_INCREMENT &lt;span class=&quot;keyword&quot;&gt;PRIMARY&lt;/span&gt; KEY,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name &lt;span class=&quot;type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;       &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;worker&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  age  &lt;span class=&quot;type&quot;&gt;INT&lt;/span&gt;         ,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  addr &lt;span class=&quot;type&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- 删除表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;drop&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;&amp;gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- 查看表 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;show&lt;/span&gt; tables;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- 修改表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;alter&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;lt;&lt;/span&gt;col&lt;span class=&quot;operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;char&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;drop&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;column&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;lt;&lt;/span&gt;col&lt;span class=&quot;operator&quot;&gt;&amp;gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- 删除整张表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;drop&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;&amp;gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
    <category term="基本操作" scheme="http://simuleite.github.io/tags/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
</feed>
